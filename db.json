{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo22.png","path":"medias/logo22.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon1.png","path":"favicon1.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d21bcb6dd6f82c2e999035b20cb9658a77fe33b2","modified":1605029808364},{"_id":"source/404.md","hash":"bea6d427933d70b1047443f73de212171d712649","modified":1604942831698},{"_id":"source/_posts/markdowm语法示例.md","hash":"288b4cf66d07c3f10992cde5f6b7e086a1df71f7","modified":1604957966573},{"_id":"source/_posts/linux如何后台运行node服务？.md","hash":"99f8c1c4830b257d3561f1937cc3619c5e91dba4","modified":1605230227719},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1604898826223},{"_id":"source/_posts/my-new-post.md","hash":"c6d7b581f9103a18021c0718e332f92ba76f642e","modified":1604900472698},{"_id":"source/about/index.md","hash":"c36f3aef64be99115d60c37b8a58f4705738619d","modified":1604942177267},{"_id":"source/_posts/test.html","hash":"c9fe5fbb5ed3ee9cbdcf22531fb9e21608085946","modified":1605035677829},{"_id":"source/categories/index.md","hash":"c787a3cde4aa0d466c230253558a617a459a6969","modified":1604942030682},{"_id":"source/_posts/彻底搞懂javascript中的高级函数之柯里化.md","hash":"2ddc2228685849eb3a6f5bbd9d7563963cfb6af1","modified":1605036544796},{"_id":"source/friends/index.md","hash":"7d426692e640bf38bf16533b7e6337a4a3b1c41c","modified":1604942751177},{"_id":"source/history/index.md","hash":"c8ea898666297758b435495409f9b7384a80dc59","modified":1605058367489},{"_id":"source/contact/index.md","hash":"1c3cd5852689ed2ed277b6a7a165a7a515baad63","modified":1604942222597},{"_id":"source/tags/index.md","hash":"14317d1068093c51a5479e2b4ea38cd4cf7d0180","modified":1604942110030},{"_id":"themes/hexo-theme-matery/README.md","hash":"56299cf1fe60a11fef61b3948fe148f995df747e","modified":1604940632438},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"011ed6522859e600c27ea6dce9591fbc447db177","modified":1604940632438},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1604940632438},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1604940632439},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"da40662f092f98de13769a3082841a6dc579e6ee","modified":1605566008240},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"ae34ac0e175c3037675722e436637efbceea32f0","modified":1604940632439},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1604940632439},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"41849f9300b8dc47048333fcf4a897dd8a2a13ca","modified":1604940632450},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1604940632451},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1604940632451},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1604940632451},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"19d62e521c4253496db559478db5164ddfd2480e","modified":1604940632451},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"f5d6459bed0f4ecb214f2dbff5b2207a80c44f66","modified":1604940632451},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"4dc6f08e7709cc04e886be72dbf0d06469f0effc","modified":1604940632452},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1604940632452},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1604940632452},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"c7453d5b064d42529e8c9fdef52d0901d51acb9b","modified":1604940632452},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1604940632453},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1604940632439},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"b1ee66aeed5e31c32ae26a2e3ff0a3a0c61a206c","modified":1605309764795},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1604940632439},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1604940632439},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1604940632439},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"28617bf2a35a4269eba6df466acd174e416d2d1e","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"3be24e4c370671eda53bdfd99fb748f4a22948ba","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1604940632440},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"76b4a37e0364380b143fdf94bf1a5e6941564414","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"5f09386aece8f9cf31f6059bbde79cd6c5171493","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1604940632441},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"a0de13cde718c7951cbf8eff809e76538e32e8e2","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"655ea63374186a1d5230648f70ab4d327bb663bb","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1604940632442},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"81eca110e533693a5369c0cc9106bf0f0432ee37","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"0e4c0a6154aa34007849928ca88f05b6185b256e","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1604940632443},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1604940632444},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1604940632449},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1604940632437},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1604940632437},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1604940632450},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1604940632450},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"a0e002377af2a7f7e4da6d9a644de97adb035925","modified":1604940632450},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"b53f4b6b7b2d992c904a9bf98b504fba247b220e","modified":1604940632453},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1604940632454},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1604940632454},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1604940632454},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1604940632454},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1604940632453},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1604940632518},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"b1ee66aeed5e31c32ae26a2e3ff0a3a0c61a206c","modified":1605309764795},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1604940632505},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1604940632455},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1604940632499},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1604940632456},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1604940632455},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1604940632456},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1604940632456},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1604940632475},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1604940632476},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1604940632477},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1604940632477},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1604940632483},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1604940632485},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1604940632484},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1604940632489},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1604940632486},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1604940632492},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1604940632493},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1604940632493},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1604940632496},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1604940632496},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1604940632486},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1604940632492},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1604940632507},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1604940632510},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1604940632509},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1604940632510},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1604940632512},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1604940632514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1604940632514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1604940632514},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1604940632515},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1604940632516},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1604940632517},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1604940632519},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1604940632519},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1604940632517},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1604940632465},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1604940632467},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1604940632466},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1604940632466},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1604940632487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1604940632487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1604940632487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1604940632487},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1604940632488},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1604940632488},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1604940632488},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1604940632493},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1604940632488},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1604940632488},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1604940632489},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1604940632494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1604940632494},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1604940632496},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1604940632494},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1604940632494},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1604940632478},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1604940632495},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1604940632486},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1604940632485},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1604940632497},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1604940632500},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1604940632501},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1604940632506},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1604940632502},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1604940632508},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1604940632507},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1604940632508},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1604940632510},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1604940632511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1604940632513},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1604940632511},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1604940632512},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1604940632518},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1604940632515},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1604940632457},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1604940632516},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1604940632464},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1604940632458},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1604940632464},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1604940632464},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1604940632475},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1604940632475},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1604940632506},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1604940632490},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1604940632492},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1604940632484},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1604940632498},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1604940632501},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1604940632505},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1604940632466},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1604940632474},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1604940632504},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1604940632468},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1604940632503},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1604940632462},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1604940632473},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1604940632482},{"_id":"public/search.xml","hash":"79d1731793f5d2ae9d131bed88482b44b9000f62","modified":1614664826573},{"_id":"public/404.html","hash":"f0639233ecfc14583fa60acb0e2c21531cf4ce90","modified":1614223347848},{"_id":"public/about/index.html","hash":"638a598caeccd92a83d284bc679e6a085c921454","modified":1614664826573},{"_id":"public/categories/index.html","hash":"eea6cedfbb8f12ad9c54b4bc02330a91679f0733","modified":1614223347848},{"_id":"public/contact/index.html","hash":"40f47cf05766eee78ea952a67f17e58fa29ca26a","modified":1614223347848},{"_id":"public/history/index.html","hash":"f9ecda3eff8c622282732e8270d3a1c46aa05403","modified":1614223347848},{"_id":"public/tags/index.html","hash":"4f864c9151a5f8091f1a4b6f0fcc00016d6a3fd4","modified":1614223347848},{"_id":"public/friends/index.html","hash":"d86a45e1d5348430acbda6dd75ecf9a4f98ea739","modified":1614223347848},{"_id":"public/2020/11/11/linux-ru-he-hou-tai-yun-xing-node-fu-wu/index.html","hash":"88178e8592e106285bf20f12bb0052f51fc85894","modified":1605316091325},{"_id":"public/2020/11/10/test/index.html","hash":"78baa2702b6aa45f9991d4683b1dee21a9d4fdfb","modified":1605230057485},{"_id":"public/2020/11/09/che-di-gao-dong-javascript-zhong-de-gao-ji-han-shu-zhi-ke-li-hua/index.html","hash":"6ab37f7f3892952c6e4df97826b47b060a2f5754","modified":1605316091325},{"_id":"public/2020/11/09/markdowm-yu-fa-shi-li/index.html","hash":"94a5ab810031b39bbdda38fb65db4f7ae9044ef5","modified":1605316091325},{"_id":"public/2020/11/08/my-new-post/index.html","hash":"07b65faee5f27759a2aa955498fc0cefa0e4fb3b","modified":1605230057485},{"_id":"public/2020/11/08/hello-world/index.html","hash":"3199cde64fdefa97531274c820a3e90ab9569a26","modified":1605316091325},{"_id":"public/archives/index.html","hash":"2ed7b79e4c6970c417bad192d8fcdfa0b13096ea","modified":1614664826573},{"_id":"public/archives/2020/index.html","hash":"90b2da2fb97cf3278047244b5275f3f178cd7a38","modified":1614664826573},{"_id":"public/archives/2020/11/index.html","hash":"18c22cc49255f15eea9c1e57bc6e7c793e0dd9b8","modified":1614664826573},{"_id":"public/index.html","hash":"f5da8bbb6c662e6d01d6b844cc47aec25e177c4c","modified":1614664826573},{"_id":"public/tags/markdown/index.html","hash":"363368e9bd610872bdf1b033592f23b3a851f8e9","modified":1614223347848},{"_id":"public/tags/nodejs/index.html","hash":"5b48850c26bb7e8e58b60aab1ad9f110ae38c13b","modified":1614223347848},{"_id":"public/tags/javascript/index.html","hash":"d141526233dc17ed5764ce79392386312f094412","modified":1614223347848},{"_id":"public/favicon.png","hash":"b1ee66aeed5e31c32ae26a2e3ff0a3a0c61a206c","modified":1605314621597},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1605230057485},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1605230057485},{"_id":"public/medias/logo.png","hash":"b1ee66aeed5e31c32ae26a2e3ff0a3a0c61a206c","modified":1605310108808},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1605230057485},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1605230057485},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1605230057485},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1605230057485},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1605230057485},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1605230057485},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1605230057485},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1605230057485},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1605230057485},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1605230057485},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1605230057485},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1605230057485},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1605230057485},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1605230057485},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1605230057485},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1605230057485},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1605230057485},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1605230057485},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1605230057485},{"_id":"public/css/prism-tomorrow.css","hash":"3b99487dfc9b4e51e9105a93743b92a761840e34","modified":1605230057485},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1605230057485},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1605230057485},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1605230057485},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1605230057485},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1605230057485},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1605230057485},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1605230057485},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1605230057485},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1605230057485},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1605230057485},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1605230057485},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1605230057485},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1605230057485},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1605230057485},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1605230057485},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1605230057485},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1605230057485},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1605230057485},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1605230057485},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1605230057485},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1605230057485},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1605230057485},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1605230057485},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1605230057485},{"_id":"public/css/my.css","hash":"10577fbc30f241b126d1b51b1f56136ecba86b19","modified":1605230057485},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1605230057485},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1605230057485},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1605230057485},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1605230057485},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1605230057485},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1605230057485},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1605230057485},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1605230057485},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1605230057485},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1605230057485},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1605230057485},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1605230057485},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1605230057485},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1605230057485},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1605230057485},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1605230057485},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1605230057485},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1605230057485},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1605230057485},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1605230057485},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1605230057485},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1605230057485},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1605230057485},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1605230057485},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1605230057485},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1605230057485},{"_id":"public/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1605230057485},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1605230057485},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1605230057485},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1605230057485},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1605230057485},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1605230057485},{"_id":"public/css/matery.css","hash":"b53f4b6b7b2d992c904a9bf98b504fba247b220e","modified":1605230057485},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1605230057485},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1605230057485},{"_id":"public/libs/minivaline/MiniValine.js","hash":"fbb58c37e2c74f127ae0c566afa9b48889aab79f","modified":1605230057485},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1605230057485},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1605230057485},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1605230057485},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1605230057485},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1605230057485},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1605230057485},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1605230057485},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1605230057485},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1605230057485},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1605230057485},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1605230057485},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1605230057485},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1605230057485},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1605230057485},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1605230057485},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1605230057485},{"_id":"themes/hexo-theme-matery/.DS_Store","hash":"49268bd8f022badde49555bd662924c3bf0094e8","modified":1605310297452},{"_id":"themes/hexo-theme-matery/source/.DS_Store","hash":"05dd11b69432bad297787721c799ab45ec17b9c0","modified":1605310323969},{"_id":"themes/hexo-theme-matery/source/medias/logo22.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1604940632519},{"_id":"public/medias/logo22.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1605310108808},{"_id":"source/_posts/js中的组合函数、懒函数以及偏函数你知道多少？.md","hash":"55503ff3b8ee9fa558137f77b35bd8b89c4c7445","modified":1605314613898},{"_id":"themes/hexo-theme-matery/source/favicon1.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1604940632454},{"_id":"public/2020/11/13/js-zhong-de-zu-he-han-shu-lan-han-shu-yi-ji-pian-han-shu-ni-zhi-dao-duo-shao/index.html","hash":"a0f599e2162632ee7c19f91c9a29ac7d74ad06a7","modified":1605316164037},{"_id":"public/favicon1.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1605314621597},{"_id":"source/_posts/前端明星.md","hash":"529892acc9284ec5eb93e2f7e57adbf237229463","modified":1605315899690},{"_id":"source/boss/index.md","hash":"80da1e55cb1c14ca6cdab4134934f2405f829ae9","modified":1605316969229},{"_id":"public/2020/11/13/qian-duan-ming-xing/index.html","hash":"54296b027a5a873f842d7fc149ab19a831ea2b83","modified":1605316091325},{"_id":"public/boss/index.html","hash":"0b8f6282854bb89398398c9bd45cacbfd16e7e80","modified":1614223347848},{"_id":"source/_posts/初级算法之数组.md","hash":"aed176ad289501e61d7e6ee3e559bdcd0a25e0e7","modified":1614664808190},{"_id":"public/2020/11/14/js-zhong-de-zu-he-han-shu-lan-han-shu-yi-ji-pian-han-shu-ni-zhi-dao-duo-shao/index.html","hash":"df0c1ebfec34052a69eb3df331f527882e72542a","modified":1614309700257},{"_id":"public/2020/11/12/linux-ru-he-hou-tai-yun-xing-node-fu-wu/index.html","hash":"a9600bb8e188e37e2914b3a464b00d5f5b7d2cd5","modified":1614223347848},{"_id":"public/2020/11/10/che-di-gao-dong-javascript-zhong-de-gao-ji-han-shu-zhi-ke-li-hua/index.html","hash":"d8348bd36a2b7c1a6d852df2cda522707a1ed66d","modified":1614223347848},{"_id":"public/2020/11/10/markdowm-yu-fa-shi-li/index.html","hash":"71e04e6230694d2195047d05eed26df3ea4a55ca","modified":1614309700257},{"_id":"public/2020/11/09/chu-ji-suan-fa-zhi-shu-zu/index.html","hash":"12ec1ec1e3773b58a765943ea5d4d527586dab9a","modified":1614223478650},{"_id":"public/2020/11/09/hello-world/index.html","hash":"003739c018b29bf6375a8fdb6d2c55987724949a","modified":1614309700257},{"_id":"public/tags/算法/index.html","hash":"750228ea5575d85852d013b79f446519d2fce0cb","modified":1614309700257},{"_id":"public/2021/02/25/chu-ji-suan-fa-zhi-shu-zu/index.html","hash":"b23128918c2d4f057faec586c8089d465446a1d8","modified":1614664826573},{"_id":"public/archives/2021/index.html","hash":"4e413325e75dcec053954ae06fe7b323a903bdc5","modified":1614664826573},{"_id":"public/archives/2021/02/index.html","hash":"a71cc65c3c818c2e8cbe4f1551aae353a7905b9e","modified":1614664826573}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2020-05-30T07:00:00.000Z","type":"404","layout":"404","description":"Cannot find the page you want :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2020-05-30 00:00:00\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Cannot find the page you want :(\"\n---\n","updated":"2020-11-09T17:27:11.698Z","path":"404.html","comments":1,"_id":"ckhfkj3qt00007rf1a3hm2vdt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2020-11-09T17:15:44.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-11-09 09:15:44\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2020-11-09T17:16:17.267Z","path":"about/index.html","comments":1,"_id":"ckhfkj3qx00027rf1bzqrcq5n","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2020-11-09T17:12:45.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-11-09 09:12:45\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2020-11-09T17:13:50.682Z","path":"categories/index.html","comments":1,"_id":"ckhfkj3qz00047rf1dfcp4cb4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"contact","date":"2020-11-09T17:16:31.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2020-11-09 09:16:31\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2020-11-09T17:17:02.597Z","path":"contact/index.html","comments":1,"_id":"ckhfkj3r200077rf13csl1pam","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"history","date":"2020-11-09T18:05:45.000Z","type":"history","layout":"history","_content":"\n\n王小峰之前的博客: <http://www.duoyu.pro:9001/>","source":"history/index.md","raw":"---\ntitle: history\ndate: 2020-11-09 10:05:45\ntype: \"history\"\nlayout: \"history\"\n---\n\n\n王小峰之前的博客: <http://www.duoyu.pro:9001/>","updated":"2020-11-11T01:32:47.489Z","path":"history/index.html","comments":1,"_id":"ckhfkj3r300097rf19mavc1k2","content":"<p>王小峰之前的博客: <a href=\"http://www.duoyu.pro:9001/\">http://www.duoyu.pro:9001/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>王小峰之前的博客: <a href=\"http://www.duoyu.pro:9001/\">http://www.duoyu.pro:9001/</a></p>\n"},{"title":"tags","date":"2020-11-09T17:14:18.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-11-09 09:14:18\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2020-11-09T17:15:10.030Z","path":"tags/index.html","comments":1,"_id":"ckhfkj3r4000b7rf15tma77n6","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2020-11-09T17:25:08.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-11-09 09:25:08\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2020-11-09T17:25:51.177Z","path":"friends/index.html","comments":1,"_id":"ckhfkj3r6000f7rf1hdntct4d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"boss","date":"2020-11-13T09:02:13.000Z","type":"boss","layout":"boss","_content":"\n## 大佬云集的\"犄角旮旯\"\n1. [阮一峰的个人网站](http://www.ruanyifeng.com/home.html)","source":"boss/index.md","raw":"---\ntitle: boss\ndate: 2020-11-13 17:02:13\ntype: \"boss\"\nlayout: \"boss\"\n---\n\n## 大佬云集的\"犄角旮旯\"\n1. [阮一峰的个人网站](http://www.ruanyifeng.com/home.html)","updated":"2020-11-14T01:22:49.229Z","path":"boss/index.html","_id":"ckhgznozy0000n9f1fhta4rha","comments":1,"content":"<h2 id=\"大佬云集的”犄角旮旯”\"><a href=\"#大佬云集的”犄角旮旯”\" class=\"headerlink\" title=\"大佬云集的”犄角旮旯”\"></a>大佬云集的”犄角旮旯”</h2><ol>\n<li><a href=\"http://www.ruanyifeng.com/home.html\">阮一峰的个人网站</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"大佬云集的”犄角旮旯”\"><a href=\"#大佬云集的”犄角旮旯”\" class=\"headerlink\" title=\"大佬云集的”犄角旮旯”\"></a>大佬云集的”犄角旮旯”</h2><ol>\n<li><a href=\"http://www.ruanyifeng.com/home.html\">阮一峰的个人网站</a></li>\n</ol>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-11-09T05:13:46.223Z","updated":"2020-11-09T05:13:46.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhfkj3qv00017rf1gnte4wf4","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"markdowm基础语法.md","date":"2020-11-09T21:29:18.000Z","_content":">微信公众号排版工具。问题或建议，请公众号留言。**[程序员翻身](#jump_8)**\n\n建议使用 **Chrome** 浏览器，体验最佳效果。\n\n使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。\n\nMarkdown是一种轻量级的「标记语言」。\n\n请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。\n\n## 1 Markdown.com.cn 简介\n\n- 支持自定义样式的 Markdown 编辑器\n- 支持微信公众号、知乎和稀土掘金\n- 点击右上方对应图标，一键复制到各平台\n\n## 2 Markdown语法教程\n\n### 2.1 标题\n\n不同数量的`#`可以完成不同的标题，如下：\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n### 2.2 字体\n\n粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：\n\n**这个是粗体**\n\n*这个是斜体*\n\n***这个是粗体加斜体***\n\n~这里想用删除线~~\n\n注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。\n\n### 2.3 无序列表\n\n无序列表的使用，在符号`-`后加空格使用。如下：\n\n- 无序列表 1\n- 无序列表 2\n- 无序列表 3\n\n如果要控制列表的层级，则需要在符号`-`前使用空格。如下：\n\n- 无序列表 1\n- 无序列表 2\n  - 无序列表 2.1\n  - 无序列表 2.2\n\n**由于微信原因，最多支持到二级列表**。\n\n### 2.4 有序列表\n\n有序列表的使用，在数字及符号`.`后加空格后输入内容，如下：\n\n1. 有序列表 1\n2. 有序列表 2\n3. 有序列表 3\n\n### 2.5 引用\n\n引用的格式是在符号`>`后面书写文字。如下：\n\n> 读一本好书，就是在和高尚的人谈话。 ——歌德\n\n> 雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰\n\n### 2.7 链接\n\n微信公众号仅支持公众号文章链接，即域名为`https://mp.weixin.qq.com/`的合法链接。使用方法如下所示：\n\n对于该论述，欢迎读者查阅之前发过的文章，[你是《未来世界的幸存者》么？](https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA)\n<a id=\"jump_8\"></a>\n### 2.8 图片\n\n插入图片，格式如下：\n\n![这里写图片描述](https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg)\n\n支持 jpg、png、gif、svg 等图片格式，**其中 svg 文件仅可在微信公众平台中使用**，svg 文件示例如下：\n\n![](https://my-wechat.mdnice.com/mdnice/i_am_svg_20191024083453.svg)\n\n支持图片**拖拽和截图粘贴**到编辑器中。\n\n注：支持图片 ***拖拽和截图粘贴*** 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。\n\n### 2.9 分割线\n\n可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：\n\n---\n\n### 2.10 表格\n\n可以使用冒号来定义表格的对齐方式，如下：\n\n| 姓名   | 年龄 |     工作 |\n| :----- | :--: | -------: |\n| 小可爱 |  18  | 吃可爱多 |\n| 小小勇敢 |  20  | 爬棵勇敢树 |\n| 小小小机智 |  22  | 看一本机智书 |\n\n\n\n## 3. 特殊语法\n\n### 3.1 脚注\n\n> 支持平台：微信公众号、知乎。\n\n脚注与链接的区别如下所示：\n\n```markdown\n链接：[文字](链接)\n脚注：[文字](脚注解释 \"脚注名字\")\n```\n\n有人认为在[大前端时代](https://en.wikipedia.org/wiki/Front-end_web_development \"Front-end web development\")的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。\n\n[全栈工程师](是指掌握多种技能，并能利用多种技能独立完成产品的人。 \"什么是全栈工程师\")在业务开发流程中起到了至关重要的作用。\n\n脚注内容请拉到最下面观看。\n\n### 3.2 代码块\n\n> 支持平台：微信代码主题仅支持微信公众号！其他主题无限制。\n\n如果在一个行内需要引用代码，只要用反引号引起来就好，如下：\n\nUse the `printf()` function.\n\n在需要高亮的代码块的前一行及后一行使用三个反引号，同时**第一行反引号后面表示代码块所使用的语言**，如下：\n\n```java\n// FileName: HelloWorld.java\npublic class HelloWorld {\n  // Java 入口程序，程序从此入口\n  public static void main(String[] args) {\n    System.out.println(\"Hello,World!\"); // 向控制台打印一条语句\n  }\n}\n```\n\n支持以下语言种类：\n\n```\nbash\nclojure，cpp，cs，css\ndart，dockerfile, diff\nerlang\ngo，gradle，groovy\nhaskell\njava，javascript，json，julia\nkotlin\nlisp，lua\nmakefile，markdown，matlab\nobjectivec\nperl，php，python\nr，ruby，rust\nscala，shell，sql，swift\ntex，typescript\nverilog，vhdl\nxml\nyaml\n```\n\n如果想要更换代码高亮样式，可在上方**代码主题**中挑选。\n\n其中**微信代码主题与微信官方一致**，有以下注意事项：\n\n- 带行号且不换行，代码大小与官方一致\n- 需要在代码块处标志语言，否则无法高亮\n- 粘贴到公众号后，用鼠标点代码块内外一次，完成高亮\n\ndiff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:\n\n```diff\n+ 新增项\n- 删除项\n```\n\n**其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致**\n\n### 3.3 数学公式\n\n> 支持平台：微信公众号、知乎。\n\n行内公式使用方法，比如这个化学公式：$\\ce{Hg^2+ ->[I-] HgI2 ->[I-] [Hg^{II}I4]^2-}$\n\n块公式使用方法如下：\n\n$$H(D_2) = -\\left(\\frac{2}{4}\\log_2 \\frac{2}{4} + \\frac{2}{4}\\log_2 \\frac{2}{4}\\right) = 1$$\n\n矩阵：\n\n$$\n  \\begin{pmatrix}\n  1 & a_1 & a_1^2 & \\cdots & a_1^n \\\\\n  1 & a_2 & a_2^2 & \\cdots & a_2^n \\\\\n  \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & a_m & a_m^2 & \\cdots & a_m^n \\\\\n  \\end{pmatrix}\n$$\n\n公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。\n\n目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。\n\n### 3.4 TOC\n\n> 支持平台：微信公众号、知乎。\n\nTOC 全称为 Table of Content，列出全部标题。\n\n[TOC]\n\n由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。\n\n### 3.5 注音符号\n\n> 支持平台：微信公众号。\n\n支持注音符号，用法如下：\n\nMarkdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！\n\n### 3.6 横屏滑动幻灯片\n\n> 支持平台：微信公众号。\n\n通过`<![](url),![](url)>`这种语法设置横屏滑动滑动片，具体用法如下：\n\n<![蓝1](https://my-wechat.mdnice.com/mdnice/%E8%93%9D1_20191109174052.jpg),![绿2](https://my-wechat.mdnice.com/mdnice/%E7%BB%BF2_20191109174052.jpg),![红3](https://my-wechat.mdnice.com/mdnice/%E7%BA%A23_20191109174052.jpg)>\n\n## 4 其他语法\n\n### 4.1 HTML\n\n支持原生 HTML 语法，请写内联样式，如下：\n\n<span style=\"display:block;text-align:right;color:orangered;\">橙色居右</span>\n<span style=\"display:block;text-align:center;color:orangered;\">橙色居中</span>\n\n### 4.2 UML\n\n不支持，推荐使用开源工具`https://draw.io/`制作后再导入图片\n\n\n## 5 致谢\n\n* 编程如画 [markdown-nice-docs](https://github.com/mdnice/markdown-nice \"插件原作者\")\n* 歌词经理 [wechat-fromat](https://github.com/lyricat/wechat-format \"灵感来源\")\n* 颜家大少 [MD2All](http://md.aclickall.com/ \"MdA2All\")\n\n","source":"_posts/markdowm语法示例.md","raw":"---\ntitle: markdowm基础语法.md\ndate: 2020-11-09 13:29:18\ntags: markdown\n---\n>微信公众号排版工具。问题或建议，请公众号留言。**[程序员翻身](#jump_8)**\n\n建议使用 **Chrome** 浏览器，体验最佳效果。\n\n使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。\n\nMarkdown是一种轻量级的「标记语言」。\n\n请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。\n\n## 1 Markdown.com.cn 简介\n\n- 支持自定义样式的 Markdown 编辑器\n- 支持微信公众号、知乎和稀土掘金\n- 点击右上方对应图标，一键复制到各平台\n\n## 2 Markdown语法教程\n\n### 2.1 标题\n\n不同数量的`#`可以完成不同的标题，如下：\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n### 2.2 字体\n\n粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：\n\n**这个是粗体**\n\n*这个是斜体*\n\n***这个是粗体加斜体***\n\n~这里想用删除线~~\n\n注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。\n\n### 2.3 无序列表\n\n无序列表的使用，在符号`-`后加空格使用。如下：\n\n- 无序列表 1\n- 无序列表 2\n- 无序列表 3\n\n如果要控制列表的层级，则需要在符号`-`前使用空格。如下：\n\n- 无序列表 1\n- 无序列表 2\n  - 无序列表 2.1\n  - 无序列表 2.2\n\n**由于微信原因，最多支持到二级列表**。\n\n### 2.4 有序列表\n\n有序列表的使用，在数字及符号`.`后加空格后输入内容，如下：\n\n1. 有序列表 1\n2. 有序列表 2\n3. 有序列表 3\n\n### 2.5 引用\n\n引用的格式是在符号`>`后面书写文字。如下：\n\n> 读一本好书，就是在和高尚的人谈话。 ——歌德\n\n> 雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰\n\n### 2.7 链接\n\n微信公众号仅支持公众号文章链接，即域名为`https://mp.weixin.qq.com/`的合法链接。使用方法如下所示：\n\n对于该论述，欢迎读者查阅之前发过的文章，[你是《未来世界的幸存者》么？](https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA)\n<a id=\"jump_8\"></a>\n### 2.8 图片\n\n插入图片，格式如下：\n\n![这里写图片描述](https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg)\n\n支持 jpg、png、gif、svg 等图片格式，**其中 svg 文件仅可在微信公众平台中使用**，svg 文件示例如下：\n\n![](https://my-wechat.mdnice.com/mdnice/i_am_svg_20191024083453.svg)\n\n支持图片**拖拽和截图粘贴**到编辑器中。\n\n注：支持图片 ***拖拽和截图粘贴*** 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。\n\n### 2.9 分割线\n\n可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：\n\n---\n\n### 2.10 表格\n\n可以使用冒号来定义表格的对齐方式，如下：\n\n| 姓名   | 年龄 |     工作 |\n| :----- | :--: | -------: |\n| 小可爱 |  18  | 吃可爱多 |\n| 小小勇敢 |  20  | 爬棵勇敢树 |\n| 小小小机智 |  22  | 看一本机智书 |\n\n\n\n## 3. 特殊语法\n\n### 3.1 脚注\n\n> 支持平台：微信公众号、知乎。\n\n脚注与链接的区别如下所示：\n\n```markdown\n链接：[文字](链接)\n脚注：[文字](脚注解释 \"脚注名字\")\n```\n\n有人认为在[大前端时代](https://en.wikipedia.org/wiki/Front-end_web_development \"Front-end web development\")的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。\n\n[全栈工程师](是指掌握多种技能，并能利用多种技能独立完成产品的人。 \"什么是全栈工程师\")在业务开发流程中起到了至关重要的作用。\n\n脚注内容请拉到最下面观看。\n\n### 3.2 代码块\n\n> 支持平台：微信代码主题仅支持微信公众号！其他主题无限制。\n\n如果在一个行内需要引用代码，只要用反引号引起来就好，如下：\n\nUse the `printf()` function.\n\n在需要高亮的代码块的前一行及后一行使用三个反引号，同时**第一行反引号后面表示代码块所使用的语言**，如下：\n\n```java\n// FileName: HelloWorld.java\npublic class HelloWorld {\n  // Java 入口程序，程序从此入口\n  public static void main(String[] args) {\n    System.out.println(\"Hello,World!\"); // 向控制台打印一条语句\n  }\n}\n```\n\n支持以下语言种类：\n\n```\nbash\nclojure，cpp，cs，css\ndart，dockerfile, diff\nerlang\ngo，gradle，groovy\nhaskell\njava，javascript，json，julia\nkotlin\nlisp，lua\nmakefile，markdown，matlab\nobjectivec\nperl，php，python\nr，ruby，rust\nscala，shell，sql，swift\ntex，typescript\nverilog，vhdl\nxml\nyaml\n```\n\n如果想要更换代码高亮样式，可在上方**代码主题**中挑选。\n\n其中**微信代码主题与微信官方一致**，有以下注意事项：\n\n- 带行号且不换行，代码大小与官方一致\n- 需要在代码块处标志语言，否则无法高亮\n- 粘贴到公众号后，用鼠标点代码块内外一次，完成高亮\n\ndiff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:\n\n```diff\n+ 新增项\n- 删除项\n```\n\n**其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致**\n\n### 3.3 数学公式\n\n> 支持平台：微信公众号、知乎。\n\n行内公式使用方法，比如这个化学公式：$\\ce{Hg^2+ ->[I-] HgI2 ->[I-] [Hg^{II}I4]^2-}$\n\n块公式使用方法如下：\n\n$$H(D_2) = -\\left(\\frac{2}{4}\\log_2 \\frac{2}{4} + \\frac{2}{4}\\log_2 \\frac{2}{4}\\right) = 1$$\n\n矩阵：\n\n$$\n  \\begin{pmatrix}\n  1 & a_1 & a_1^2 & \\cdots & a_1^n \\\\\n  1 & a_2 & a_2^2 & \\cdots & a_2^n \\\\\n  \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & a_m & a_m^2 & \\cdots & a_m^n \\\\\n  \\end{pmatrix}\n$$\n\n公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。\n\n目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。\n\n### 3.4 TOC\n\n> 支持平台：微信公众号、知乎。\n\nTOC 全称为 Table of Content，列出全部标题。\n\n[TOC]\n\n由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。\n\n### 3.5 注音符号\n\n> 支持平台：微信公众号。\n\n支持注音符号，用法如下：\n\nMarkdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！\n\n### 3.6 横屏滑动幻灯片\n\n> 支持平台：微信公众号。\n\n通过`<![](url),![](url)>`这种语法设置横屏滑动滑动片，具体用法如下：\n\n<![蓝1](https://my-wechat.mdnice.com/mdnice/%E8%93%9D1_20191109174052.jpg),![绿2](https://my-wechat.mdnice.com/mdnice/%E7%BB%BF2_20191109174052.jpg),![红3](https://my-wechat.mdnice.com/mdnice/%E7%BA%A23_20191109174052.jpg)>\n\n## 4 其他语法\n\n### 4.1 HTML\n\n支持原生 HTML 语法，请写内联样式，如下：\n\n<span style=\"display:block;text-align:right;color:orangered;\">橙色居右</span>\n<span style=\"display:block;text-align:center;color:orangered;\">橙色居中</span>\n\n### 4.2 UML\n\n不支持，推荐使用开源工具`https://draw.io/`制作后再导入图片\n\n\n## 5 致谢\n\n* 编程如画 [markdown-nice-docs](https://github.com/mdnice/markdown-nice \"插件原作者\")\n* 歌词经理 [wechat-fromat](https://github.com/lyricat/wechat-format \"灵感来源\")\n* 颜家大少 [MD2All](http://md.aclickall.com/ \"MdA2All\")\n\n","slug":"markdowm语法示例","published":1,"updated":"2020-11-09T21:39:26.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhfkj3qy00037rf152vq0y9u","content":"<blockquote>\n<p>微信公众号排版工具。问题或建议，请公众号留言。**<a href=\"#jump_8\">程序员翻身</a>**</p>\n</blockquote>\n<p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p>\n<p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p>\n<p>Markdown是一种轻量级的「标记语言」。</p>\n<p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p>\n<h2 id=\"1-Markdown-com-cn-简介\"><a href=\"#1-Markdown-com-cn-简介\" class=\"headerlink\" title=\"1 Markdown.com.cn 简介\"></a>1 Markdown.com.cn 简介</h2><ul>\n<li>支持自定义样式的 Markdown 编辑器</li>\n<li>支持微信公众号、知乎和稀土掘金</li>\n<li>点击右上方对应图标，一键复制到各平台</li>\n</ul>\n<h2 id=\"2-Markdown语法教程\"><a href=\"#2-Markdown语法教程\" class=\"headerlink\" title=\"2 Markdown语法教程\"></a>2 Markdown语法教程</h2><h3 id=\"2-1-标题\"><a href=\"#2-1-标题\" class=\"headerlink\" title=\"2.1 标题\"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h3 id=\"2-2-字体\"><a href=\"#2-2-字体\" class=\"headerlink\" title=\"2.2 字体\"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p><strong><em>这个是粗体加斜体</em></strong></p>\n<p><del>这里想用删除线</del></p>\n<p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p>\n<h3 id=\"2-3-无序列表\"><a href=\"#2-3-无序列表\" class=\"headerlink\" title=\"2.3 无序列表\"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n<li>无序列表 3</li>\n</ul>\n<p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2<ul>\n<li>无序列表 2.1</li>\n<li>无序列表 2.2</li>\n</ul>\n</li>\n</ul>\n<p><strong>由于微信原因，最多支持到二级列表</strong>。</p>\n<h3 id=\"2-4-有序列表\"><a href=\"#2-4-有序列表\" class=\"headerlink\" title=\"2.4 有序列表\"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p>\n<ol>\n<li>有序列表 1</li>\n<li>有序列表 2</li>\n<li>有序列表 3</li>\n</ol>\n<h3 id=\"2-5-引用\"><a href=\"#2-5-引用\" class=\"headerlink\" title=\"2.5 引用\"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p>\n<blockquote>\n<p>读一本好书，就是在和高尚的人谈话。 ——歌德</p>\n</blockquote>\n<blockquote>\n<p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p>\n</blockquote>\n<h3 id=\"2-7-链接\"><a href=\"#2-7-链接\" class=\"headerlink\" title=\"2.7 链接\"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p>\n<p>对于该论述，欢迎读者查阅之前发过的文章，<a href=\"https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA\">你是《未来世界的幸存者》么？</a><br><a id=\"jump_8\"></a></p>\n<h3 id=\"2-8-图片\"><a href=\"#2-8-图片\" class=\"headerlink\" title=\"2.8 图片\"></a>2.8 图片</h3><p>插入图片，格式如下：</p>\n<p><img src=\"https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg\" alt=\"这里写图片描述\"></p>\n<p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p>\n<p><img src=\"https://my-wechat.mdnice.com/mdnice/i_am_svg_20191024083453.svg\"></p>\n<p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p>\n<p>注：支持图片 <strong><em>拖拽和截图粘贴</em></strong> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p>\n<h3 id=\"2-9-分割线\"><a href=\"#2-9-分割线\" class=\"headerlink\" title=\"2.9 分割线\"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p>\n<hr>\n<h3 id=\"2-10-表格\"><a href=\"#2-10-表格\" class=\"headerlink\" title=\"2.10 表格\"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"right\">工作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">小可爱</td>\n<td align=\"center\">18</td>\n<td align=\"right\">吃可爱多</td>\n</tr>\n<tr>\n<td align=\"left\">小小勇敢</td>\n<td align=\"center\">20</td>\n<td align=\"right\">爬棵勇敢树</td>\n</tr>\n<tr>\n<td align=\"left\">小小小机智</td>\n<td align=\"center\">22</td>\n<td align=\"right\">看一本机智书</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-特殊语法\"><a href=\"#3-特殊语法\" class=\"headerlink\" title=\"3. 特殊语法\"></a>3. 特殊语法</h2><h3 id=\"3-1-脚注\"><a href=\"#3-1-脚注\" class=\"headerlink\" title=\"3.1 脚注\"></a>3.1 脚注</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>脚注与链接的区别如下所示：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">链接：[文字](链接)\n脚注：[文字](脚注解释 &quot;脚注名字&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>有人认为在<a href=\"https://en.wikipedia.org/wiki/Front-end_web_development\" title=\"Front-end web development\">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p>\n<p><a href=\"%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82\" title=\"什么是全栈工程师\">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p>\n<p>脚注内容请拉到最下面观看。</p>\n<h3 id=\"3-2-代码块\"><a href=\"#3-2-代码块\" class=\"headerlink\" title=\"3.2 代码块\"></a>3.2 代码块</h3><blockquote>\n<p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p>\n</blockquote>\n<p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p>\n<p>Use the <code>printf()</code> function.</p>\n<p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; FileName: HelloWorld.java\npublic class HelloWorld &#123;\n  &#x2F;&#x2F; Java 入口程序，程序从此入口\n  public static void main(String[] args) &#123;\n    System.out.println(&quot;Hello,World!&quot;); &#x2F;&#x2F; 向控制台打印一条语句\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>支持以下语言种类：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bash\nclojure，cpp，cs，css\ndart，dockerfile, diff\nerlang\ngo，gradle，groovy\nhaskell\njava，javascript，json，julia\nkotlin\nlisp，lua\nmakefile，markdown，matlab\nobjectivec\nperl，php，python\nr，ruby，rust\nscala，shell，sql，swift\ntex，typescript\nverilog，vhdl\nxml\nyaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p>\n<p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p>\n<ul>\n<li>带行号且不换行，代码大小与官方一致</li>\n<li>需要在代码块处标志语言，否则无法高亮</li>\n<li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li>\n</ul>\n<p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p>\n<pre class=\"line-numbers language-diff\" data-language=\"diff\"><code class=\"language-diff\">+ 新增项\n- 删除项<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p>\n<h3 id=\"3-3-数学公式\"><a href=\"#3-3-数学公式\" class=\"headerlink\" title=\"3.3 数学公式\"></a>3.3 数学公式</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>行内公式使用方法，比如这个化学公式：$\\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p>\n<p>块公式使用方法如下：</p>\n<p>$$H(D_2) = -\\left(\\frac{2}{4}\\log_2 \\frac{2}{4} + \\frac{2}{4}\\log_2 \\frac{2}{4}\\right) = 1$$</p>\n<p>矩阵：</p>\n<p>$$<br>  \\begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \\cdots &amp; a_1^n \\<br>  1 &amp; a_2 &amp; a_2^2 &amp; \\cdots &amp; a_2^n \\<br>  \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\<br>  1 &amp; a_m &amp; a_m^2 &amp; \\cdots &amp; a_m^n \\<br>  \\end{pmatrix}<br>$$</p>\n<p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p>\n<p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p>\n<h3 id=\"3-4-TOC\"><a href=\"#3-4-TOC\" class=\"headerlink\" title=\"3.4 TOC\"></a>3.4 TOC</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>TOC 全称为 Table of Content，列出全部标题。</p>\n<p>[TOC]</p>\n<p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p>\n<h3 id=\"3-5-注音符号\"><a href=\"#3-5-注音符号\" class=\"headerlink\" title=\"3.5 注音符号\"></a>3.5 注音符号</h3><blockquote>\n<p>支持平台：微信公众号。</p>\n</blockquote>\n<p>支持注音符号，用法如下：</p>\n<p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p>\n<h3 id=\"3-6-横屏滑动幻灯片\"><a href=\"#3-6-横屏滑动幻灯片\" class=\"headerlink\" title=\"3.6 横屏滑动幻灯片\"></a>3.6 横屏滑动幻灯片</h3><blockquote>\n<p>支持平台：微信公众号。</p>\n</blockquote>\n<p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p>\n<p>&lt;<img src=\"https://my-wechat.mdnice.com/mdnice/%E8%93%9D1_20191109174052.jpg\" alt=\"蓝1\">,<img src=\"https://my-wechat.mdnice.com/mdnice/%E7%BB%BF2_20191109174052.jpg\" alt=\"绿2\">,<img src=\"https://my-wechat.mdnice.com/mdnice/%E7%BA%A23_20191109174052.jpg\" alt=\"红3\">&gt;</p>\n<h2 id=\"4-其他语法\"><a href=\"#4-其他语法\" class=\"headerlink\" title=\"4 其他语法\"></a>4 其他语法</h2><h3 id=\"4-1-HTML\"><a href=\"#4-1-HTML\" class=\"headerlink\" title=\"4.1 HTML\"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p>\n<p><span style=\"display:block;text-align:right;color:orangered;\">橙色居右</span><br><span style=\"display:block;text-align:center;color:orangered;\">橙色居中</span></p>\n<h3 id=\"4-2-UML\"><a href=\"#4-2-UML\" class=\"headerlink\" title=\"4.2 UML\"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p>\n<h2 id=\"5-致谢\"><a href=\"#5-致谢\" class=\"headerlink\" title=\"5 致谢\"></a>5 致谢</h2><ul>\n<li>编程如画 <a href=\"https://github.com/mdnice/markdown-nice\" title=\"插件原作者\">markdown-nice-docs</a></li>\n<li>歌词经理 <a href=\"https://github.com/lyricat/wechat-format\" title=\"灵感来源\">wechat-fromat</a></li>\n<li>颜家大少 <a href=\"http://md.aclickall.com/\" title=\"MdA2All\">MD2All</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>微信公众号排版工具。问题或建议，请公众号留言。**<a href=\"#jump_8\">程序员翻身</a>**</p>\n</blockquote>\n<p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p>\n<p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p>\n<p>Markdown是一种轻量级的「标记语言」。</p>\n<p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p>\n<h2 id=\"1-Markdown-com-cn-简介\"><a href=\"#1-Markdown-com-cn-简介\" class=\"headerlink\" title=\"1 Markdown.com.cn 简介\"></a>1 Markdown.com.cn 简介</h2><ul>\n<li>支持自定义样式的 Markdown 编辑器</li>\n<li>支持微信公众号、知乎和稀土掘金</li>\n<li>点击右上方对应图标，一键复制到各平台</li>\n</ul>\n<h2 id=\"2-Markdown语法教程\"><a href=\"#2-Markdown语法教程\" class=\"headerlink\" title=\"2 Markdown语法教程\"></a>2 Markdown语法教程</h2><h3 id=\"2-1-标题\"><a href=\"#2-1-标题\" class=\"headerlink\" title=\"2.1 标题\"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h3 id=\"2-2-字体\"><a href=\"#2-2-字体\" class=\"headerlink\" title=\"2.2 字体\"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p><strong><em>这个是粗体加斜体</em></strong></p>\n<p><del>这里想用删除线</del></p>\n<p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p>\n<h3 id=\"2-3-无序列表\"><a href=\"#2-3-无序列表\" class=\"headerlink\" title=\"2.3 无序列表\"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n<li>无序列表 3</li>\n</ul>\n<p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2<ul>\n<li>无序列表 2.1</li>\n<li>无序列表 2.2</li>\n</ul>\n</li>\n</ul>\n<p><strong>由于微信原因，最多支持到二级列表</strong>。</p>\n<h3 id=\"2-4-有序列表\"><a href=\"#2-4-有序列表\" class=\"headerlink\" title=\"2.4 有序列表\"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p>\n<ol>\n<li>有序列表 1</li>\n<li>有序列表 2</li>\n<li>有序列表 3</li>\n</ol>\n<h3 id=\"2-5-引用\"><a href=\"#2-5-引用\" class=\"headerlink\" title=\"2.5 引用\"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p>\n<blockquote>\n<p>读一本好书，就是在和高尚的人谈话。 ——歌德</p>\n</blockquote>\n<blockquote>\n<p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p>\n</blockquote>\n<h3 id=\"2-7-链接\"><a href=\"#2-7-链接\" class=\"headerlink\" title=\"2.7 链接\"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p>\n<p>对于该论述，欢迎读者查阅之前发过的文章，<a href=\"https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA\">你是《未来世界的幸存者》么？</a><br><a id=\"jump_8\"></a></p>\n<h3 id=\"2-8-图片\"><a href=\"#2-8-图片\" class=\"headerlink\" title=\"2.8 图片\"></a>2.8 图片</h3><p>插入图片，格式如下：</p>\n<p><img src=\"https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg\" alt=\"这里写图片描述\"></p>\n<p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p>\n<p><img src=\"https://my-wechat.mdnice.com/mdnice/i_am_svg_20191024083453.svg\"></p>\n<p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p>\n<p>注：支持图片 <strong><em>拖拽和截图粘贴</em></strong> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p>\n<h3 id=\"2-9-分割线\"><a href=\"#2-9-分割线\" class=\"headerlink\" title=\"2.9 分割线\"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p>\n<hr>\n<h3 id=\"2-10-表格\"><a href=\"#2-10-表格\" class=\"headerlink\" title=\"2.10 表格\"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"right\">工作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">小可爱</td>\n<td align=\"center\">18</td>\n<td align=\"right\">吃可爱多</td>\n</tr>\n<tr>\n<td align=\"left\">小小勇敢</td>\n<td align=\"center\">20</td>\n<td align=\"right\">爬棵勇敢树</td>\n</tr>\n<tr>\n<td align=\"left\">小小小机智</td>\n<td align=\"center\">22</td>\n<td align=\"right\">看一本机智书</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-特殊语法\"><a href=\"#3-特殊语法\" class=\"headerlink\" title=\"3. 特殊语法\"></a>3. 特殊语法</h2><h3 id=\"3-1-脚注\"><a href=\"#3-1-脚注\" class=\"headerlink\" title=\"3.1 脚注\"></a>3.1 脚注</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>脚注与链接的区别如下所示：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">链接：[文字](链接)\n脚注：[文字](脚注解释 &quot;脚注名字&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>有人认为在<a href=\"https://en.wikipedia.org/wiki/Front-end_web_development\" title=\"Front-end web development\">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p>\n<p><a href=\"%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82\" title=\"什么是全栈工程师\">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p>\n<p>脚注内容请拉到最下面观看。</p>\n<h3 id=\"3-2-代码块\"><a href=\"#3-2-代码块\" class=\"headerlink\" title=\"3.2 代码块\"></a>3.2 代码块</h3><blockquote>\n<p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p>\n</blockquote>\n<p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p>\n<p>Use the <code>printf()</code> function.</p>\n<p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; FileName: HelloWorld.java\npublic class HelloWorld &#123;\n  &#x2F;&#x2F; Java 入口程序，程序从此入口\n  public static void main(String[] args) &#123;\n    System.out.println(&quot;Hello,World!&quot;); &#x2F;&#x2F; 向控制台打印一条语句\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>支持以下语言种类：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bash\nclojure，cpp，cs，css\ndart，dockerfile, diff\nerlang\ngo，gradle，groovy\nhaskell\njava，javascript，json，julia\nkotlin\nlisp，lua\nmakefile，markdown，matlab\nobjectivec\nperl，php，python\nr，ruby，rust\nscala，shell，sql，swift\ntex，typescript\nverilog，vhdl\nxml\nyaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p>\n<p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p>\n<ul>\n<li>带行号且不换行，代码大小与官方一致</li>\n<li>需要在代码块处标志语言，否则无法高亮</li>\n<li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li>\n</ul>\n<p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p>\n<pre class=\"line-numbers language-diff\" data-language=\"diff\"><code class=\"language-diff\">+ 新增项\n- 删除项<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p>\n<h3 id=\"3-3-数学公式\"><a href=\"#3-3-数学公式\" class=\"headerlink\" title=\"3.3 数学公式\"></a>3.3 数学公式</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>行内公式使用方法，比如这个化学公式：$\\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p>\n<p>块公式使用方法如下：</p>\n<p>$$H(D_2) = -\\left(\\frac{2}{4}\\log_2 \\frac{2}{4} + \\frac{2}{4}\\log_2 \\frac{2}{4}\\right) = 1$$</p>\n<p>矩阵：</p>\n<p>$$<br>  \\begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \\cdots &amp; a_1^n \\<br>  1 &amp; a_2 &amp; a_2^2 &amp; \\cdots &amp; a_2^n \\<br>  \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\<br>  1 &amp; a_m &amp; a_m^2 &amp; \\cdots &amp; a_m^n \\<br>  \\end{pmatrix}<br>$$</p>\n<p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p>\n<p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p>\n<h3 id=\"3-4-TOC\"><a href=\"#3-4-TOC\" class=\"headerlink\" title=\"3.4 TOC\"></a>3.4 TOC</h3><blockquote>\n<p>支持平台：微信公众号、知乎。</p>\n</blockquote>\n<p>TOC 全称为 Table of Content，列出全部标题。</p>\n<p>[TOC]</p>\n<p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p>\n<h3 id=\"3-5-注音符号\"><a href=\"#3-5-注音符号\" class=\"headerlink\" title=\"3.5 注音符号\"></a>3.5 注音符号</h3><blockquote>\n<p>支持平台：微信公众号。</p>\n</blockquote>\n<p>支持注音符号，用法如下：</p>\n<p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p>\n<h3 id=\"3-6-横屏滑动幻灯片\"><a href=\"#3-6-横屏滑动幻灯片\" class=\"headerlink\" title=\"3.6 横屏滑动幻灯片\"></a>3.6 横屏滑动幻灯片</h3><blockquote>\n<p>支持平台：微信公众号。</p>\n</blockquote>\n<p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p>\n<p>&lt;<img src=\"https://my-wechat.mdnice.com/mdnice/%E8%93%9D1_20191109174052.jpg\" alt=\"蓝1\">,<img src=\"https://my-wechat.mdnice.com/mdnice/%E7%BB%BF2_20191109174052.jpg\" alt=\"绿2\">,<img src=\"https://my-wechat.mdnice.com/mdnice/%E7%BA%A23_20191109174052.jpg\" alt=\"红3\">&gt;</p>\n<h2 id=\"4-其他语法\"><a href=\"#4-其他语法\" class=\"headerlink\" title=\"4 其他语法\"></a>4 其他语法</h2><h3 id=\"4-1-HTML\"><a href=\"#4-1-HTML\" class=\"headerlink\" title=\"4.1 HTML\"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p>\n<p><span style=\"display:block;text-align:right;color:orangered;\">橙色居右</span><br><span style=\"display:block;text-align:center;color:orangered;\">橙色居中</span></p>\n<h3 id=\"4-2-UML\"><a href=\"#4-2-UML\" class=\"headerlink\" title=\"4.2 UML\"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p>\n<h2 id=\"5-致谢\"><a href=\"#5-致谢\" class=\"headerlink\" title=\"5 致谢\"></a>5 致谢</h2><ul>\n<li>编程如画 <a href=\"https://github.com/mdnice/markdown-nice\" title=\"插件原作者\">markdown-nice-docs</a></li>\n<li>歌词经理 <a href=\"https://github.com/lyricat/wechat-format\" title=\"灵感来源\">wechat-fromat</a></li>\n<li>颜家大少 <a href=\"http://md.aclickall.com/\" title=\"MdA2All\">MD2All</a></li>\n</ul>\n"},{"title":"linux如何后台运行node服务？","date":"2020-11-11T17:17:57.000Z","_content":"\n### 1. 安装pm2\n> 你要在linux上安装pm2有很多方法，但我是用node的工具npm来完成安装的，所以在安装pm2之前需要先安装node。这里如果不会，就百度一个安装node,这个小事我就不做了，如果不服，那就不服！！\n\n```bash\nnpm install pm2 -g\n# 安装完成运行\npm2 list \n```\n\n`注意`： 有的系统会直接创建命令，有的需要手动创建，当你回车后，看到 `-bash: pm2: command not found`, 就需要手动创建指令了。\n\n\n### 2. 创建软连接\n> 操作描述：在linux上的设置软连接相当于是windows下的配制环境变量一个道理，只是这里用了命令完成的操作。这里我们就开始为pm2创建软连接，这里首先要明确的是，我们要知道谁和谁去连接，问题来了？知道是哪个和哪个连接吗？好了，答案是：我们的linux下的全局$PATH和我们pm2的安装路径。那么我们如何知道他们的路径分别是哪里呢？\n\n1. 首先，需要找到pm2的安装路径，在上面输入 `npm install pm2 -g`全局安装时，/usr/sbin/nodejs/bin/pm2 -> /usr/sbin/nodejs/lib/node_modules/pm2/bin/pm2\n/usr/sbin/nodejs/bin/pm2是安装路径（你的可能和我的不一样）\n2. 建立软连接\n```bash\nln -s /usr/sbin/nodejs/bin/pm2 /usr/local/bin/ #注意空格\n```\n3. 验证\n```bash\npm2 list\n```\n\n### 3. pm2的常用命令\n```bash\npm2 start app.js # 启动app.js应用程序\npm2 start app.js –name=”api” # 启动应用程序并命名为 “api”\npm2 start app.js –watch # 当文件变化时自动重启应用\npm2 start script.sh # 启动 bash 脚本\npm2 list # 列表 PM2 启动的所有的应用程序\npm2 monit # 显示每个应用程序的CPU和内存占用情况\npm2 show [app-name] # 显示应用程序的所有信息\npm2 logs # 显示所有应用程序的日志\npm2 logs [app-name] # 显示指定用程序的日志\npm2 stop all # 停止所有的应用程序\npm2 stop 0 # 停止 id为 0的指定应用程序\npm2 restart all # 重启所有应用\npm2 reload all # 重启 cluster mode下的所有应用\npm2 gracefulReload all # Graceful reload all apps in cluster mode\npm2 delete all # 关闭并删除所有应用\npm2 delete 0 # 删除指定应用 id 0\npm2 scale api 10 # 把名字叫api的应用扩展到10个实例\npm2 reset [app-name] # 重置重启数量\npm2 startup # 创建开机自启动命令\npm2 save # 保存当前应用列表\npm2 resurrect # 重新加载保存的应用列表\npm2 update # Save processes, kill PM2 and restore processes\npm2 generate # Generate a sample json configuration file\n```","source":"_posts/linux如何后台运行node服务？.md","raw":"---\ntitle: linux如何后台运行node服务？\ndate: 2020-11-11 09:17:57\ntags: nodejs\n---\n\n### 1. 安装pm2\n> 你要在linux上安装pm2有很多方法，但我是用node的工具npm来完成安装的，所以在安装pm2之前需要先安装node。这里如果不会，就百度一个安装node,这个小事我就不做了，如果不服，那就不服！！\n\n```bash\nnpm install pm2 -g\n# 安装完成运行\npm2 list \n```\n\n`注意`： 有的系统会直接创建命令，有的需要手动创建，当你回车后，看到 `-bash: pm2: command not found`, 就需要手动创建指令了。\n\n\n### 2. 创建软连接\n> 操作描述：在linux上的设置软连接相当于是windows下的配制环境变量一个道理，只是这里用了命令完成的操作。这里我们就开始为pm2创建软连接，这里首先要明确的是，我们要知道谁和谁去连接，问题来了？知道是哪个和哪个连接吗？好了，答案是：我们的linux下的全局$PATH和我们pm2的安装路径。那么我们如何知道他们的路径分别是哪里呢？\n\n1. 首先，需要找到pm2的安装路径，在上面输入 `npm install pm2 -g`全局安装时，/usr/sbin/nodejs/bin/pm2 -> /usr/sbin/nodejs/lib/node_modules/pm2/bin/pm2\n/usr/sbin/nodejs/bin/pm2是安装路径（你的可能和我的不一样）\n2. 建立软连接\n```bash\nln -s /usr/sbin/nodejs/bin/pm2 /usr/local/bin/ #注意空格\n```\n3. 验证\n```bash\npm2 list\n```\n\n### 3. pm2的常用命令\n```bash\npm2 start app.js # 启动app.js应用程序\npm2 start app.js –name=”api” # 启动应用程序并命名为 “api”\npm2 start app.js –watch # 当文件变化时自动重启应用\npm2 start script.sh # 启动 bash 脚本\npm2 list # 列表 PM2 启动的所有的应用程序\npm2 monit # 显示每个应用程序的CPU和内存占用情况\npm2 show [app-name] # 显示应用程序的所有信息\npm2 logs # 显示所有应用程序的日志\npm2 logs [app-name] # 显示指定用程序的日志\npm2 stop all # 停止所有的应用程序\npm2 stop 0 # 停止 id为 0的指定应用程序\npm2 restart all # 重启所有应用\npm2 reload all # 重启 cluster mode下的所有应用\npm2 gracefulReload all # Graceful reload all apps in cluster mode\npm2 delete all # 关闭并删除所有应用\npm2 delete 0 # 删除指定应用 id 0\npm2 scale api 10 # 把名字叫api的应用扩展到10个实例\npm2 reset [app-name] # 重置重启数量\npm2 startup # 创建开机自启动命令\npm2 save # 保存当前应用列表\npm2 resurrect # 重新加载保存的应用列表\npm2 update # Save processes, kill PM2 and restore processes\npm2 generate # Generate a sample json configuration file\n```","slug":"linux如何后台运行node服务？","published":1,"updated":"2020-11-13T01:17:07.719Z","_id":"ckhfkj3qz00057rf1hp142xvg","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-安装pm2\"><a href=\"#1-安装pm2\" class=\"headerlink\" title=\"1. 安装pm2\"></a>1. 安装pm2</h3><blockquote>\n<p>你要在linux上安装pm2有很多方法，但我是用node的工具npm来完成安装的，所以在安装pm2之前需要先安装node。这里如果不会，就百度一个安装node,这个小事我就不做了，如果不服，那就不服！！</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install pm2 -g\n# 安装完成运行\npm2 list <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><code>注意</code>： 有的系统会直接创建命令，有的需要手动创建，当你回车后，看到 <code>-bash: pm2: command not found</code>, 就需要手动创建指令了。</p>\n<h3 id=\"2-创建软连接\"><a href=\"#2-创建软连接\" class=\"headerlink\" title=\"2. 创建软连接\"></a>2. 创建软连接</h3><blockquote>\n<p>操作描述：在linux上的设置软连接相当于是windows下的配制环境变量一个道理，只是这里用了命令完成的操作。这里我们就开始为pm2创建软连接，这里首先要明确的是，我们要知道谁和谁去连接，问题来了？知道是哪个和哪个连接吗？好了，答案是：我们的linux下的全局$PATH和我们pm2的安装路径。那么我们如何知道他们的路径分别是哪里呢？</p>\n</blockquote>\n<ol>\n<li>首先，需要找到pm2的安装路径，在上面输入 <code>npm install pm2 -g</code>全局安装时，/usr/sbin/nodejs/bin/pm2 -&gt; /usr/sbin/nodejs/lib/node_modules/pm2/bin/pm2<br>/usr/sbin/nodejs/bin/pm2是安装路径（你的可能和我的不一样）</li>\n<li>建立软连接<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ln -s &#x2F;usr&#x2F;sbin&#x2F;nodejs&#x2F;bin&#x2F;pm2 &#x2F;usr&#x2F;local&#x2F;bin&#x2F; #注意空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>验证<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n</li>\n</ol>\n<h3 id=\"3-pm2的常用命令\"><a href=\"#3-pm2的常用命令\" class=\"headerlink\" title=\"3. pm2的常用命令\"></a>3. pm2的常用命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 start app.js # 启动app.js应用程序\npm2 start app.js –name&#x3D;”api” # 启动应用程序并命名为 “api”\npm2 start app.js –watch # 当文件变化时自动重启应用\npm2 start script.sh # 启动 bash 脚本\npm2 list # 列表 PM2 启动的所有的应用程序\npm2 monit # 显示每个应用程序的CPU和内存占用情况\npm2 show [app-name] # 显示应用程序的所有信息\npm2 logs # 显示所有应用程序的日志\npm2 logs [app-name] # 显示指定用程序的日志\npm2 stop all # 停止所有的应用程序\npm2 stop 0 # 停止 id为 0的指定应用程序\npm2 restart all # 重启所有应用\npm2 reload all # 重启 cluster mode下的所有应用\npm2 gracefulReload all # Graceful reload all apps in cluster mode\npm2 delete all # 关闭并删除所有应用\npm2 delete 0 # 删除指定应用 id 0\npm2 scale api 10 # 把名字叫api的应用扩展到10个实例\npm2 reset [app-name] # 重置重启数量\npm2 startup # 创建开机自启动命令\npm2 save # 保存当前应用列表\npm2 resurrect # 重新加载保存的应用列表\npm2 update # Save processes, kill PM2 and restore processes\npm2 generate # Generate a sample json configuration file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-安装pm2\"><a href=\"#1-安装pm2\" class=\"headerlink\" title=\"1. 安装pm2\"></a>1. 安装pm2</h3><blockquote>\n<p>你要在linux上安装pm2有很多方法，但我是用node的工具npm来完成安装的，所以在安装pm2之前需要先安装node。这里如果不会，就百度一个安装node,这个小事我就不做了，如果不服，那就不服！！</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install pm2 -g\n# 安装完成运行\npm2 list <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><code>注意</code>： 有的系统会直接创建命令，有的需要手动创建，当你回车后，看到 <code>-bash: pm2: command not found</code>, 就需要手动创建指令了。</p>\n<h3 id=\"2-创建软连接\"><a href=\"#2-创建软连接\" class=\"headerlink\" title=\"2. 创建软连接\"></a>2. 创建软连接</h3><blockquote>\n<p>操作描述：在linux上的设置软连接相当于是windows下的配制环境变量一个道理，只是这里用了命令完成的操作。这里我们就开始为pm2创建软连接，这里首先要明确的是，我们要知道谁和谁去连接，问题来了？知道是哪个和哪个连接吗？好了，答案是：我们的linux下的全局$PATH和我们pm2的安装路径。那么我们如何知道他们的路径分别是哪里呢？</p>\n</blockquote>\n<ol>\n<li>首先，需要找到pm2的安装路径，在上面输入 <code>npm install pm2 -g</code>全局安装时，/usr/sbin/nodejs/bin/pm2 -&gt; /usr/sbin/nodejs/lib/node_modules/pm2/bin/pm2<br>/usr/sbin/nodejs/bin/pm2是安装路径（你的可能和我的不一样）</li>\n<li>建立软连接<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ln -s &#x2F;usr&#x2F;sbin&#x2F;nodejs&#x2F;bin&#x2F;pm2 &#x2F;usr&#x2F;local&#x2F;bin&#x2F; #注意空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>验证<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n</li>\n</ol>\n<h3 id=\"3-pm2的常用命令\"><a href=\"#3-pm2的常用命令\" class=\"headerlink\" title=\"3. pm2的常用命令\"></a>3. pm2的常用命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pm2 start app.js # 启动app.js应用程序\npm2 start app.js –name&#x3D;”api” # 启动应用程序并命名为 “api”\npm2 start app.js –watch # 当文件变化时自动重启应用\npm2 start script.sh # 启动 bash 脚本\npm2 list # 列表 PM2 启动的所有的应用程序\npm2 monit # 显示每个应用程序的CPU和内存占用情况\npm2 show [app-name] # 显示应用程序的所有信息\npm2 logs # 显示所有应用程序的日志\npm2 logs [app-name] # 显示指定用程序的日志\npm2 stop all # 停止所有的应用程序\npm2 stop 0 # 停止 id为 0的指定应用程序\npm2 restart all # 重启所有应用\npm2 reload all # 重启 cluster mode下的所有应用\npm2 gracefulReload all # Graceful reload all apps in cluster mode\npm2 delete all # 关闭并删除所有应用\npm2 delete 0 # 删除指定应用 id 0\npm2 scale api 10 # 把名字叫api的应用扩展到10个实例\npm2 reset [app-name] # 重置重启数量\npm2 startup # 创建开机自启动命令\npm2 save # 保存当前应用列表\npm2 resurrect # 重新加载保存的应用列表\npm2 update # Save processes, kill PM2 and restore processes\npm2 generate # Generate a sample json configuration file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"彻底搞懂javascript中高级函数之柯里化","date":"2020-11-09T21:42:44.000Z","_content":"\n## 请解析下面这道\n1. 实现函数_curry(fn)使之具有以下功能：fn是一个三元函数，fn(a, b, c)，\n   const _fn = _curry(fn) _fn(a)(b) 的结果和 fn(a, b, c)的结果一致\n   即将fn转化为柯里化函数\n```javascript\nfunction fn(a, b, c) {\n   return [].slice.apply(arguments, 0).recude(function(a, b) { return a + b }, 0);\n}\n// 实现一\nconst _curry1 = function(fn, args=[]){\n\treturn function() {\n\t\tlet rest = [...arguments, ...args];\n\t\t// 如果参数个数小于最初的fn.length，则递归调用，继续收集参数\n\t\tif (rest.length < fn.length){\n\t\t\treturn _curry1.call(this, fn, rest);\n\t\t}\n\t\treturn fn.call(this, ...rest);\n\t}\n}\n// 实现二\nconst _curry2 = (fn) => {\n\tconst curried = (...args) => {\n      if(args.length >= fn.length) {\n      \treturn fn.apply(this, args)\n      } else {\n      \treturn (...args2) => {\n      \t\tlet temp = args.concat(args2);\n           return curried(...temp)\n      \t}\n      }\n\t}\n\treturn curried;\n}\nlet _fn = _curry2(fn)\nlet sum1 = _fn(1, 2, 3);\nlet sum2 = _fn(1, 2)(3);\nlet sum3 = _fn(1)(2)(3);\nlet sum4 = _fn(1, 2)(3);\nconsole.log('sum1==', sum1)\nconsole.log('sum2==', sum2)\nconsole.log('sum3==', sum3)\nconsole.log('sum4==', sum4)\n```\n## 开始详解函数的柯里化\n1. 概念：\n> 柯里化是指这样一个函数(假设叫做createCurry)，他接收函数A作为参数，运行后能够返回一个新的函数。并且这个新的函数能够处理函数A的剩余参数。\n2. 原理解析\n> 柯里化函数的运行过程其实是一个参数的收集过程，我们将每一次传入的参数收集起来，并在最里层里面处理\n3. 聪明的读者可能已经发现，把函数经过createCurry转化为一个柯里化函数，最后执行的结果，不是正好相当于执行函数自身吗？柯里化是不是把简单的问题复杂化了？如果你能够提出这样的问题，那么说明你确实已经对柯里化有了一定的了解。柯里化确实是把简答的问题复杂化了，但是复杂化的同时，我们使用函数拥有了更加多的自由度。而这里对于函数参数的自由处理，正是柯里化的核心所在\n\n## 柯里化函数的使用场景\n1. 输入场景校验\n```javascript\n// 实现方式1\nfunction check (targetString, reg) {\n\tconsole.log(arguments)\n\treturn reg.test(targetString);\n}\ncheck(/^1[34578]\\d{9}$/, '14900000088');\ncheck(/^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$/, 'test@163.com');\n\n// 实现方式2 将其柯里化\nconst _check = function(check, args =[]) {\n    return function() {\n    \tlet rest = [...args, ...arguments]\n   \t    if (rest.length < check.length) {\n   \t   \t\treturn _check.apply(this, check, rest)\n   \t    }\n   \t    return _check.apply(this, ...args);\n    }\n};\nvar checkPhone = _check(/^1[34578]\\d{9}$/);\nvar checkEmail = _check(/^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$/);\ncheckPhone('183888888');\ncheckEmail('xxxxx@test.com');\n```","source":"_posts/彻底搞懂javascript中的高级函数之柯里化.md","raw":"---\ntitle: 彻底搞懂javascript中高级函数之柯里化\ndate: 2020-11-09 13:42:44\ntags: javascript\n---\n\n## 请解析下面这道\n1. 实现函数_curry(fn)使之具有以下功能：fn是一个三元函数，fn(a, b, c)，\n   const _fn = _curry(fn) _fn(a)(b) 的结果和 fn(a, b, c)的结果一致\n   即将fn转化为柯里化函数\n```javascript\nfunction fn(a, b, c) {\n   return [].slice.apply(arguments, 0).recude(function(a, b) { return a + b }, 0);\n}\n// 实现一\nconst _curry1 = function(fn, args=[]){\n\treturn function() {\n\t\tlet rest = [...arguments, ...args];\n\t\t// 如果参数个数小于最初的fn.length，则递归调用，继续收集参数\n\t\tif (rest.length < fn.length){\n\t\t\treturn _curry1.call(this, fn, rest);\n\t\t}\n\t\treturn fn.call(this, ...rest);\n\t}\n}\n// 实现二\nconst _curry2 = (fn) => {\n\tconst curried = (...args) => {\n      if(args.length >= fn.length) {\n      \treturn fn.apply(this, args)\n      } else {\n      \treturn (...args2) => {\n      \t\tlet temp = args.concat(args2);\n           return curried(...temp)\n      \t}\n      }\n\t}\n\treturn curried;\n}\nlet _fn = _curry2(fn)\nlet sum1 = _fn(1, 2, 3);\nlet sum2 = _fn(1, 2)(3);\nlet sum3 = _fn(1)(2)(3);\nlet sum4 = _fn(1, 2)(3);\nconsole.log('sum1==', sum1)\nconsole.log('sum2==', sum2)\nconsole.log('sum3==', sum3)\nconsole.log('sum4==', sum4)\n```\n## 开始详解函数的柯里化\n1. 概念：\n> 柯里化是指这样一个函数(假设叫做createCurry)，他接收函数A作为参数，运行后能够返回一个新的函数。并且这个新的函数能够处理函数A的剩余参数。\n2. 原理解析\n> 柯里化函数的运行过程其实是一个参数的收集过程，我们将每一次传入的参数收集起来，并在最里层里面处理\n3. 聪明的读者可能已经发现，把函数经过createCurry转化为一个柯里化函数，最后执行的结果，不是正好相当于执行函数自身吗？柯里化是不是把简单的问题复杂化了？如果你能够提出这样的问题，那么说明你确实已经对柯里化有了一定的了解。柯里化确实是把简答的问题复杂化了，但是复杂化的同时，我们使用函数拥有了更加多的自由度。而这里对于函数参数的自由处理，正是柯里化的核心所在\n\n## 柯里化函数的使用场景\n1. 输入场景校验\n```javascript\n// 实现方式1\nfunction check (targetString, reg) {\n\tconsole.log(arguments)\n\treturn reg.test(targetString);\n}\ncheck(/^1[34578]\\d{9}$/, '14900000088');\ncheck(/^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$/, 'test@163.com');\n\n// 实现方式2 将其柯里化\nconst _check = function(check, args =[]) {\n    return function() {\n    \tlet rest = [...args, ...arguments]\n   \t    if (rest.length < check.length) {\n   \t   \t\treturn _check.apply(this, check, rest)\n   \t    }\n   \t    return _check.apply(this, ...args);\n    }\n};\nvar checkPhone = _check(/^1[34578]\\d{9}$/);\nvar checkEmail = _check(/^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$/);\ncheckPhone('183888888');\ncheckEmail('xxxxx@test.com');\n```","slug":"彻底搞懂javascript中的高级函数之柯里化","published":1,"updated":"2020-11-10T19:29:04.796Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhfkj3r4000c7rf1g6499rau","content":"<h2 id=\"请解析下面这道\"><a href=\"#请解析下面这道\" class=\"headerlink\" title=\"请解析下面这道\"></a>请解析下面这道</h2><ol>\n<li>实现函数_curry(fn)使之具有以下功能：fn是一个三元函数，fn(a, b, c)，<br>const _fn = _curry(fn) _fn(a)(b) 的结果和 fn(a, b, c)的结果一致<br>即将fn转化为柯里化函数<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">recude</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现一</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_curry1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 如果参数个数小于最初的fn.length，则递归调用，继续收集参数</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">_curry1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现二</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_curry2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">curried</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      \t<span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      \t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      \t\t<span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>args2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token function\">curried</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>temp<span class=\"token punctuation\">)</span>\n      \t<span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> curried<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">let</span> _fn <span class=\"token operator\">=</span> <span class=\"token function\">_curry2</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> sum1 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum2 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum3 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum4 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum1=='</span><span class=\"token punctuation\">,</span> sum1<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum2=='</span><span class=\"token punctuation\">,</span> sum2<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum3=='</span><span class=\"token punctuation\">,</span> sum3<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum4=='</span><span class=\"token punctuation\">,</span> sum4<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"开始详解函数的柯里化\"><a href=\"#开始详解函数的柯里化\" class=\"headerlink\" title=\"开始详解函数的柯里化\"></a>开始详解函数的柯里化</h2></li>\n<li>概念：<blockquote>\n<p>柯里化是指这样一个函数(假设叫做createCurry)，他接收函数A作为参数，运行后能够返回一个新的函数。并且这个新的函数能够处理函数A的剩余参数。</p>\n</blockquote>\n</li>\n<li>原理解析<blockquote>\n<p>柯里化函数的运行过程其实是一个参数的收集过程，我们将每一次传入的参数收集起来，并在最里层里面处理</p>\n</blockquote>\n</li>\n<li>聪明的读者可能已经发现，把函数经过createCurry转化为一个柯里化函数，最后执行的结果，不是正好相当于执行函数自身吗？柯里化是不是把简单的问题复杂化了？如果你能够提出这样的问题，那么说明你确实已经对柯里化有了一定的了解。柯里化确实是把简答的问题复杂化了，但是复杂化的同时，我们使用函数拥有了更加多的自由度。而这里对于函数参数的自由处理，正是柯里化的核心所在</li>\n</ol>\n<h2 id=\"柯里化函数的使用场景\"><a href=\"#柯里化函数的使用场景\" class=\"headerlink\" title=\"柯里化函数的使用场景\"></a>柯里化函数的使用场景</h2><ol>\n<li>输入场景校验<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 实现方式1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">check</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">targetString<span class=\"token punctuation\">,</span> reg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>targetString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^1[34578]\\d&#123;9&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'14900000088'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test@163.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 实现方式2 将其柯里化</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_check</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">check<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span>\n   \t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> check<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   \t   \t\t<span class=\"token keyword\">return</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> check<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   \t    <span class=\"token punctuation\">&#125;</span>\n   \t    <span class=\"token keyword\">return</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> checkPhone <span class=\"token operator\">=</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^1[34578]\\d&#123;9&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> checkEmail <span class=\"token operator\">=</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">checkPhone</span><span class=\"token punctuation\">(</span><span class=\"token string\">'183888888'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">checkEmail</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxxxx@test.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"请解析下面这道\"><a href=\"#请解析下面这道\" class=\"headerlink\" title=\"请解析下面这道\"></a>请解析下面这道</h2><ol>\n<li>实现函数_curry(fn)使之具有以下功能：fn是一个三元函数，fn(a, b, c)，<br>const _fn = _curry(fn) _fn(a)(b) 的结果和 fn(a, b, c)的结果一致<br>即将fn转化为柯里化函数<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">recude</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现一</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_curry1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 如果参数个数小于最初的fn.length，则递归调用，继续收集参数</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">_curry1</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现二</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_curry2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">curried</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      \t<span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      \t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      \t\t<span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>args2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">return</span> <span class=\"token function\">curried</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>temp<span class=\"token punctuation\">)</span>\n      \t<span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> curried<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">let</span> _fn <span class=\"token operator\">=</span> <span class=\"token function\">_curry2</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> sum1 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum2 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum3 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sum4 <span class=\"token operator\">=</span> <span class=\"token function\">_fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum1=='</span><span class=\"token punctuation\">,</span> sum1<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum2=='</span><span class=\"token punctuation\">,</span> sum2<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum3=='</span><span class=\"token punctuation\">,</span> sum3<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum4=='</span><span class=\"token punctuation\">,</span> sum4<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"开始详解函数的柯里化\"><a href=\"#开始详解函数的柯里化\" class=\"headerlink\" title=\"开始详解函数的柯里化\"></a>开始详解函数的柯里化</h2></li>\n<li>概念：<blockquote>\n<p>柯里化是指这样一个函数(假设叫做createCurry)，他接收函数A作为参数，运行后能够返回一个新的函数。并且这个新的函数能够处理函数A的剩余参数。</p>\n</blockquote>\n</li>\n<li>原理解析<blockquote>\n<p>柯里化函数的运行过程其实是一个参数的收集过程，我们将每一次传入的参数收集起来，并在最里层里面处理</p>\n</blockquote>\n</li>\n<li>聪明的读者可能已经发现，把函数经过createCurry转化为一个柯里化函数，最后执行的结果，不是正好相当于执行函数自身吗？柯里化是不是把简单的问题复杂化了？如果你能够提出这样的问题，那么说明你确实已经对柯里化有了一定的了解。柯里化确实是把简答的问题复杂化了，但是复杂化的同时，我们使用函数拥有了更加多的自由度。而这里对于函数参数的自由处理，正是柯里化的核心所在</li>\n</ol>\n<h2 id=\"柯里化函数的使用场景\"><a href=\"#柯里化函数的使用场景\" class=\"headerlink\" title=\"柯里化函数的使用场景\"></a>柯里化函数的使用场景</h2><ol>\n<li>输入场景校验<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 实现方式1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">check</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">targetString<span class=\"token punctuation\">,</span> reg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>targetString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^1[34578]\\d&#123;9&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'14900000088'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test@163.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 实现方式2 将其柯里化</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">_check</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">check<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span>\n   \t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> check<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   \t   \t\t<span class=\"token keyword\">return</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> check<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   \t    <span class=\"token punctuation\">&#125;</span>\n   \t    <span class=\"token keyword\">return</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> checkPhone <span class=\"token operator\">=</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^1[34578]\\d&#123;9&#125;$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> checkEmail <span class=\"token operator\">=</span> <span class=\"token function\">_check</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">checkPhone</span><span class=\"token punctuation\">(</span><span class=\"token string\">'183888888'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">checkEmail</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xxxxx@test.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n"},{"title":"这些高阶的函数技术，你掌握了吗？","date":"2020-11-13T23:35:20.000Z","_content":"\n> 在JavaScript 中，函数视为一等公民，所谓的“一等公民”，指的是函数和其他数据类型的一样，处于平等地位，可以赋值给其他变量，也可作为参数，传入另一个函数，或者作为其他函数的返回值。\n### 1. 高级函数至少满足以下条件之一\n+ 接受函数作为参数\n+ 将函数作为输出返回\n常用的高阶函数\n```javascript\n// Array.prototype.map 高阶函数\nconst arr = [1, 2, 3, 4];\nconst map = arr.map(x => x * 10)\n// debounce函数(防止某一函数被连续调用)\nconst debounce = function(fn, wait) {\n  var td;\n  return function () {\n    clearTimeout(td);\n    td = setTimeout(fn, wait)\n  }\n}\nconst fun = debounce(() => {\n  // 繁重、耗性能的操作\n}, 250)\nwindow.addEventListener('resize',myFunc);\n// \n// 柯里化函数\nconst curry = function(fn, args =[]) {\n  let rest = [...arguments, ...args]\n  return function() {\n   if (rest.length < fn.length) {\n     return fn.apply(this, rest)\n   } else {\n     return curry.call(this, fn, rest)\n   }\n  }\n}\n```\n### 2. 组合函数\n>函数组合就是将一个或者一个以上的函数组合生成一个新函数的过程\n\n```javascript\nconst composeFn = function (f, g) {\n  return function (x) {\n    return f(g(x))\n  }\n}\n// 此处举个例子\nfunction lowerCase(input) {\n  return input && typeof input === 'string' ? input.lowerCase() : input;\n}\nfunction upperCase(input) {\n  return input && typeof input === 'string' ? input.upperCase() : input;\n}\nfunction trim(input) {\n  return input && typeof input === 'string' ? input.trim() : input;\n}\nfunction split(input, delimiter = ',') {\n  return input && typeof input === 'string' ? input.split(delimiter) : input;\n}\nconst compose = function(...funcs) {\n  return function(input){\n    return funcs.reduce((arg, fn) => (fn(arg)), input)\n  }\n}\nconst superCom =  compose(trim, upperCase, split )\nsuperCom('a,B,C ') // ['A', 'B', 'C']\n```\n### 3. 偏函数\n> 用于固定一个函数的一个或者多个参数，并且返回一个处理剩余参数的函数的函数\n\n```javascript\nfunction patial(fn) {\n  let args = Array.prototype.slice(arguments, 1);\n  return function () {\n    const newArgs = [...args, ...arguments]\n    return fn.apply(this, newArgs)\n  }\n}\nfunction buildUrl(scheme, domain, path) {\n  return `${scheme}://${domain}/${path}`\n}\nconst myblogPath = patial(buildUrl, 'http', 'duoyu.pro')\nconst articalpath = myblogPath('articl/99');\n```\n### 惰性载入函数\n>\n","source":"_posts/js中的组合函数、懒函数以及偏函数你知道多少？.md","raw":"---\ntitle: 这些高阶的函数技术，你掌握了吗？\ndate: 2020-11-13 15:35:20\ntags: javascript\n---\n\n> 在JavaScript 中，函数视为一等公民，所谓的“一等公民”，指的是函数和其他数据类型的一样，处于平等地位，可以赋值给其他变量，也可作为参数，传入另一个函数，或者作为其他函数的返回值。\n### 1. 高级函数至少满足以下条件之一\n+ 接受函数作为参数\n+ 将函数作为输出返回\n常用的高阶函数\n```javascript\n// Array.prototype.map 高阶函数\nconst arr = [1, 2, 3, 4];\nconst map = arr.map(x => x * 10)\n// debounce函数(防止某一函数被连续调用)\nconst debounce = function(fn, wait) {\n  var td;\n  return function () {\n    clearTimeout(td);\n    td = setTimeout(fn, wait)\n  }\n}\nconst fun = debounce(() => {\n  // 繁重、耗性能的操作\n}, 250)\nwindow.addEventListener('resize',myFunc);\n// \n// 柯里化函数\nconst curry = function(fn, args =[]) {\n  let rest = [...arguments, ...args]\n  return function() {\n   if (rest.length < fn.length) {\n     return fn.apply(this, rest)\n   } else {\n     return curry.call(this, fn, rest)\n   }\n  }\n}\n```\n### 2. 组合函数\n>函数组合就是将一个或者一个以上的函数组合生成一个新函数的过程\n\n```javascript\nconst composeFn = function (f, g) {\n  return function (x) {\n    return f(g(x))\n  }\n}\n// 此处举个例子\nfunction lowerCase(input) {\n  return input && typeof input === 'string' ? input.lowerCase() : input;\n}\nfunction upperCase(input) {\n  return input && typeof input === 'string' ? input.upperCase() : input;\n}\nfunction trim(input) {\n  return input && typeof input === 'string' ? input.trim() : input;\n}\nfunction split(input, delimiter = ',') {\n  return input && typeof input === 'string' ? input.split(delimiter) : input;\n}\nconst compose = function(...funcs) {\n  return function(input){\n    return funcs.reduce((arg, fn) => (fn(arg)), input)\n  }\n}\nconst superCom =  compose(trim, upperCase, split )\nsuperCom('a,B,C ') // ['A', 'B', 'C']\n```\n### 3. 偏函数\n> 用于固定一个函数的一个或者多个参数，并且返回一个处理剩余参数的函数的函数\n\n```javascript\nfunction patial(fn) {\n  let args = Array.prototype.slice(arguments, 1);\n  return function () {\n    const newArgs = [...args, ...arguments]\n    return fn.apply(this, newArgs)\n  }\n}\nfunction buildUrl(scheme, domain, path) {\n  return `${scheme}://${domain}/${path}`\n}\nconst myblogPath = patial(buildUrl, 'http', 'duoyu.pro')\nconst articalpath = myblogPath('articl/99');\n```\n### 惰性载入函数\n>\n","slug":"js中的组合函数、懒函数以及偏函数你知道多少？","published":1,"updated":"2020-11-14T00:43:33.898Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhgyvlvw0000g2f15pfi9ue0","content":"<blockquote>\n<p>在JavaScript 中，函数视为一等公民，所谓的“一等公民”，指的是函数和其他数据类型的一样，处于平等地位，可以赋值给其他变量，也可作为参数，传入另一个函数，或者作为其他函数的返回值。</p>\n</blockquote>\n<h3 id=\"1-高级函数至少满足以下条件之一\"><a href=\"#1-高级函数至少满足以下条件之一\" class=\"headerlink\" title=\"1. 高级函数至少满足以下条件之一\"></a>1. 高级函数至少满足以下条件之一</h3><ul>\n<li>接受函数作为参数</li>\n<li>将函数作为输出返回<br>常用的高阶函数<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Array.prototype.map 高阶函数</span>\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// debounce函数(防止某一函数被连续调用)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">debounce</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> td<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    td <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 繁重、耗性能的操作</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span>myFunc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// </span>\n<span class=\"token comment\">// 柯里化函数</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">curry</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">curry</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-组合函数\"><a href=\"#2-组合函数\" class=\"headerlink\" title=\"2. 组合函数\"></a>2. 组合函数</h3><blockquote>\n<p>函数组合就是将一个或者一个以上的函数组合生成一个新函数的过程</p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">composeFn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> g</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 此处举个例子</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">lowerCase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">lowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">upperCase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">upperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> delimiter <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>delimiter<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> funcs<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> superCom <span class=\"token operator\">=</span>  <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>trim<span class=\"token punctuation\">,</span> upperCase<span class=\"token punctuation\">,</span> split <span class=\"token punctuation\">)</span>\n<span class=\"token function\">superCom</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a,B,C '</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['A', 'B', 'C']</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-偏函数\"><a href=\"#3-偏函数\" class=\"headerlink\" title=\"3. 偏函数\"></a>3. 偏函数</h3><blockquote>\n<p>用于固定一个函数的一个或者多个参数，并且返回一个处理剩余参数的函数的函数</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">patial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> newArgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> newArgs<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">buildUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scheme<span class=\"token punctuation\">,</span> domain<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>scheme<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>domain<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> myblogPath <span class=\"token operator\">=</span> <span class=\"token function\">patial</span><span class=\"token punctuation\">(</span>buildUrl<span class=\"token punctuation\">,</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'duoyu.pro'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> articalpath <span class=\"token operator\">=</span> <span class=\"token function\">myblogPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'articl/99'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"惰性载入函数\"><a href=\"#惰性载入函数\" class=\"headerlink\" title=\"惰性载入函数\"></a>惰性载入函数</h3><blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>在JavaScript 中，函数视为一等公民，所谓的“一等公民”，指的是函数和其他数据类型的一样，处于平等地位，可以赋值给其他变量，也可作为参数，传入另一个函数，或者作为其他函数的返回值。</p>\n</blockquote>\n<h3 id=\"1-高级函数至少满足以下条件之一\"><a href=\"#1-高级函数至少满足以下条件之一\" class=\"headerlink\" title=\"1. 高级函数至少满足以下条件之一\"></a>1. 高级函数至少满足以下条件之一</h3><ul>\n<li>接受函数作为参数</li>\n<li>将函数作为输出返回<br>常用的高阶函数<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Array.prototype.map 高阶函数</span>\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// debounce函数(防止某一函数被连续调用)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">debounce</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> td<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    td <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> fun <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 繁重、耗性能的操作</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span>myFunc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// </span>\n<span class=\"token comment\">// 柯里化函数</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">curry</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> rest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> fn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">curry</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> rest<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-组合函数\"><a href=\"#2-组合函数\" class=\"headerlink\" title=\"2. 组合函数\"></a>2. 组合函数</h3><blockquote>\n<p>函数组合就是将一个或者一个以上的函数组合生成一个新函数的过程</p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">composeFn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> g</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 此处举个例子</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">lowerCase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">lowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">upperCase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">upperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> delimiter <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> input <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> input <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>delimiter<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> funcs<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> superCom <span class=\"token operator\">=</span>  <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>trim<span class=\"token punctuation\">,</span> upperCase<span class=\"token punctuation\">,</span> split <span class=\"token punctuation\">)</span>\n<span class=\"token function\">superCom</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a,B,C '</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['A', 'B', 'C']</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-偏函数\"><a href=\"#3-偏函数\" class=\"headerlink\" title=\"3. 偏函数\"></a>3. 偏函数</h3><blockquote>\n<p>用于固定一个函数的一个或者多个参数，并且返回一个处理剩余参数的函数的函数</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">patial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> newArgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> newArgs<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">buildUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scheme<span class=\"token punctuation\">,</span> domain<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>scheme<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>domain<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> myblogPath <span class=\"token operator\">=</span> <span class=\"token function\">patial</span><span class=\"token punctuation\">(</span>buildUrl<span class=\"token punctuation\">,</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'duoyu.pro'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> articalpath <span class=\"token operator\">=</span> <span class=\"token function\">myblogPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'articl/99'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"惰性载入函数\"><a href=\"#惰性载入函数\" class=\"headerlink\" title=\"惰性载入函数\"></a>惰性载入函数</h3><blockquote>\n</blockquote>\n"},{"title":"初级算法之数组.md","date":"2021-02-25T05:29:18.000Z","_content":"\n### 1. 删除排序数组中的重复项\n\n> 给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。\n\n#### 示例\n\n> 给定 nums = [0,0,1,1,1,2,2,3,3,4],\n> 函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。\n> 你不需要考虑数组中超出新长度后面的元素。\n\n```javascript\nfunction removeDuplicates(nums: number[]): number {\n  var j = 0;\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i] != nums[j]) {\n      nums[++j] = nums[i];\n    }\n  }\n  return j + 1;\n}\n```\n\n### 2. 旋转数组\n\n> 给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数\n\n#### 示例\n\n> 输入: nums = [1,2,3,4,5,6,7], k = 3\n> 输出: [5,6,7,1,2,3,4]\n> 解释:\n> 向右旋转 1 步: [7,1,2,3,4,5,6]\n> 向右旋转 2 步: [6,7,1,2,3,4,5]\n> 向右旋转 3 步: [5,6,7,1,2,3,4]\n\n```javascript\n/**\n Do not return anything, modify nums in-place instead.\n */\nfunction rotate(nums: number[], k: number): void {\n  for (var i = 0; i < k; i++) {\n    let p = nums.pop();\n    nums.unshift(p);\n  }\n}\n```\n\n### 3. 存在重复元素\n\n> 给定一个整数数组，判断是否存在重复元素。\n> 如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。\n\n#### 示例\n\n> 输入: [1,2,3,1]\n> 输出: true\n\n```javascript\n// 实现1\nfunction containsDuplicate(nums: number[]): boolean {\n  let flag = false;\n  for (let i = 0; i < nums.length; i++) {\n    for (let j = 0; j < nums.length; j++) {\n      if (i != j) {\n        if (nums[i] === nums[j]) {\n          flag = true;\n        }\n      }\n    }\n  }\n  return flag;\n}\n// 实现二\nfunction containsDuplicate(nums: number[]): boolean {\n  nums.sort();\n  for (let j = 0; j < nums.length; j++) {\n    if (nums[j] === nums[j + 1]) {\n      flag = true;\n    }\n  }\n  return flag;\n}\n```\n\n### 4. 只出现一次的数字\n\n> 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n\n#### 示例\n\n> 输入: [4,1,2,1,2]\n> 输出: 4\n\n```javascript\nfunction singleNumber(nums: number[]): number {\n  let per = nums.shift();\n  while (per || per == 0) {\n    let idx = nums.findIndex((el) => el == per);\n    if (idx >= 0) {\n      nums.splice(idx, 1);\n    }\n    if (idx < 0) {\n      return per;\n    }\n    per = nums.shift();\n  }\n}\n```\n\n### 5. 两个数组的交集 II\n\n> 给定两个数组，编写一个函数来计算它们的交集。\n\n#### 示例\n\n> 输入：nums1 = [1,2,2,1], nums2 = [2,2]\n> 输出：[2,2]\n\n```javascript\nfunction intersect(nums1: number[], nums2: number[]): number[] {\n  let arr = [],\n    m = 0;\n  if (nums1.length == 0 || nums2.length == 0) {\n    return arr;\n  }\n  nums1.sort((a, b) => a - b);\n  nums2.sort((a, b) => a - b);\n  for (let i = 0, j = 0; i < nums1.length && j < nums2.length; ) {\n    if (nums1[i] == nums2[j]) {\n      arr[m++] = nums1[i];\n      i++;\n      j++;\n    } else if (nums1[i] < nums2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return arr;\n}\n```\n\n### 6. 加一\n\n> 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。\n> 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。\n> 你可以假设除了整数 0 之外，这个整数不会以零开头。\n\n#### 示例\n\n> 输入：digits = [4,3,2,1]\n> 输出：[4,3,2,2]\n> 解释：输入数组表示数字 4321。\n\n```javascript\nfunction plusOne(digits: number[]): number[] {\n  for (let i = digits.length - 1; i >= 0; i--) {\n    digits[i] = digits[i] + 1;\n    digits[i] = digits[i] % 10;\n    if (digits[i] !== 0) {\n      return digits;\n    }\n  }\n  digits.unshift(1);\n  return digits;\n}\n```\n\n### 7. 移动零\n\n> 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。\n\n#### 示例\n\n> 输入: [0,1,0,3,12]\n> 输出: [1,3,12,0,0]\n\n```javascript\nfunction moveZeroes(nums: number[]): number[] {\n  for(let i = nums.length; i >=0, i--) {\n    if (nums[i] === 0) {\n      nums.splice(1, 1)\n      nums.push(0)\n    }\n  }\n}\n```\n","source":"_posts/初级算法之数组.md","raw":"---\ntitle: 初级算法之数组.md\ndate: 2021-02-25 13:29:18\ntags: 算法\n---\n\n### 1. 删除排序数组中的重复项\n\n> 给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。\n\n#### 示例\n\n> 给定 nums = [0,0,1,1,1,2,2,3,3,4],\n> 函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。\n> 你不需要考虑数组中超出新长度后面的元素。\n\n```javascript\nfunction removeDuplicates(nums: number[]): number {\n  var j = 0;\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i] != nums[j]) {\n      nums[++j] = nums[i];\n    }\n  }\n  return j + 1;\n}\n```\n\n### 2. 旋转数组\n\n> 给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数\n\n#### 示例\n\n> 输入: nums = [1,2,3,4,5,6,7], k = 3\n> 输出: [5,6,7,1,2,3,4]\n> 解释:\n> 向右旋转 1 步: [7,1,2,3,4,5,6]\n> 向右旋转 2 步: [6,7,1,2,3,4,5]\n> 向右旋转 3 步: [5,6,7,1,2,3,4]\n\n```javascript\n/**\n Do not return anything, modify nums in-place instead.\n */\nfunction rotate(nums: number[], k: number): void {\n  for (var i = 0; i < k; i++) {\n    let p = nums.pop();\n    nums.unshift(p);\n  }\n}\n```\n\n### 3. 存在重复元素\n\n> 给定一个整数数组，判断是否存在重复元素。\n> 如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。\n\n#### 示例\n\n> 输入: [1,2,3,1]\n> 输出: true\n\n```javascript\n// 实现1\nfunction containsDuplicate(nums: number[]): boolean {\n  let flag = false;\n  for (let i = 0; i < nums.length; i++) {\n    for (let j = 0; j < nums.length; j++) {\n      if (i != j) {\n        if (nums[i] === nums[j]) {\n          flag = true;\n        }\n      }\n    }\n  }\n  return flag;\n}\n// 实现二\nfunction containsDuplicate(nums: number[]): boolean {\n  nums.sort();\n  for (let j = 0; j < nums.length; j++) {\n    if (nums[j] === nums[j + 1]) {\n      flag = true;\n    }\n  }\n  return flag;\n}\n```\n\n### 4. 只出现一次的数字\n\n> 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n\n#### 示例\n\n> 输入: [4,1,2,1,2]\n> 输出: 4\n\n```javascript\nfunction singleNumber(nums: number[]): number {\n  let per = nums.shift();\n  while (per || per == 0) {\n    let idx = nums.findIndex((el) => el == per);\n    if (idx >= 0) {\n      nums.splice(idx, 1);\n    }\n    if (idx < 0) {\n      return per;\n    }\n    per = nums.shift();\n  }\n}\n```\n\n### 5. 两个数组的交集 II\n\n> 给定两个数组，编写一个函数来计算它们的交集。\n\n#### 示例\n\n> 输入：nums1 = [1,2,2,1], nums2 = [2,2]\n> 输出：[2,2]\n\n```javascript\nfunction intersect(nums1: number[], nums2: number[]): number[] {\n  let arr = [],\n    m = 0;\n  if (nums1.length == 0 || nums2.length == 0) {\n    return arr;\n  }\n  nums1.sort((a, b) => a - b);\n  nums2.sort((a, b) => a - b);\n  for (let i = 0, j = 0; i < nums1.length && j < nums2.length; ) {\n    if (nums1[i] == nums2[j]) {\n      arr[m++] = nums1[i];\n      i++;\n      j++;\n    } else if (nums1[i] < nums2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return arr;\n}\n```\n\n### 6. 加一\n\n> 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。\n> 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。\n> 你可以假设除了整数 0 之外，这个整数不会以零开头。\n\n#### 示例\n\n> 输入：digits = [4,3,2,1]\n> 输出：[4,3,2,2]\n> 解释：输入数组表示数字 4321。\n\n```javascript\nfunction plusOne(digits: number[]): number[] {\n  for (let i = digits.length - 1; i >= 0; i--) {\n    digits[i] = digits[i] + 1;\n    digits[i] = digits[i] % 10;\n    if (digits[i] !== 0) {\n      return digits;\n    }\n  }\n  digits.unshift(1);\n  return digits;\n}\n```\n\n### 7. 移动零\n\n> 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。\n\n#### 示例\n\n> 输入: [0,1,0,3,12]\n> 输出: [1,3,12,0,0]\n\n```javascript\nfunction moveZeroes(nums: number[]): number[] {\n  for(let i = nums.length; i >=0, i--) {\n    if (nums[i] === 0) {\n      nums.splice(1, 1)\n      nums.push(0)\n    }\n  }\n}\n```\n","slug":"初级算法之数组","published":1,"updated":"2021-03-02T06:00:08.190Z","_id":"cklkawjcp0000o3f1729z206r","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-删除排序数组中的重复项\"><a href=\"#1-删除排序数组中的重复项\" class=\"headerlink\" title=\"1. 删除排序数组中的重复项\"></a>1. 删除排序数组中的重复项</h3><blockquote>\n<p>给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p>\n</blockquote>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>给定 nums = [0,0,1,1,1,2,2,3,3,4],<br>函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。<br>你不需要考虑数组中超出新长度后面的元素。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeDuplicates</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-旋转数组\"><a href=\"#2-旋转数组\" class=\"headerlink\" title=\"2. 旋转数组\"></a>2. 旋转数组</h3><blockquote>\n<p>给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数</p>\n</blockquote>\n<h4 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: nums = [1,2,3,4,5,6,7], k = 3<br>输出: [5,6,7,1,2,3,4]<br>解释:<br>向右旋转 1 步: [7,1,2,3,4,5,6]<br>向右旋转 2 步: [6,7,1,2,3,4,5]<br>向右旋转 3 步: [5,6,7,1,2,3,4]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n Do not return anything, modify nums in-place instead.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nums<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-存在重复元素\"><a href=\"#3-存在重复元素\" class=\"headerlink\" title=\"3. 存在重复元素\"></a>3. 存在重复元素</h3><blockquote>\n<p>给定一个整数数组，判断是否存在重复元素。<br>如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。</p>\n</blockquote>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [1,2,3,1]<br>输出: true</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 实现1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">containsDuplicate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现二</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">containsDuplicate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">&#123;</span>\n  nums<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> nums<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-只出现一次的数字\"><a href=\"#4-只出现一次的数字\" class=\"headerlink\" title=\"4. 只出现一次的数字\"></a>4. 只出现一次的数字</h3><blockquote>\n<p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>\n</blockquote>\n<h4 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [4,1,2,1,2]<br>输出: 4</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> per <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>per <span class=\"token operator\">||</span> per <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el <span class=\"token operator\">==</span> per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> per<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    per <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-两个数组的交集-II\"><a href=\"#5-两个数组的交集-II\" class=\"headerlink\" title=\"5. 两个数组的交集 II\"></a>5. 两个数组的交集 II</h3><blockquote>\n<p>给定两个数组，编写一个函数来计算它们的交集。</p>\n</blockquote>\n<h4 id=\"示例-4\"><a href=\"#示例-4\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入：nums1 = [1,2,2,1], nums2 = [2,2]<br>输出：[2,2]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums1<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums2<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> nums2<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  nums1<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nums2<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      arr<span class=\"token punctuation\">[</span>m<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6-加一\"><a href=\"#6-加一\" class=\"headerlink\" title=\"6. 加一\"></a>6. 加一</h3><blockquote>\n<p>给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。<br>最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。<br>你可以假设除了整数 0 之外，这个整数不会以零开头。</p>\n</blockquote>\n<h4 id=\"示例-5\"><a href=\"#示例-5\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入：digits = [4,3,2,1]<br>输出：[4,3,2,2]<br>解释：输入数组表示数字 4321。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">plusOne</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">digits<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> digits<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  digits<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> digits<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-移动零\"><a href=\"#7-移动零\" class=\"headerlink\" title=\"7. 移动零\"></a>7. 移动零</h3><blockquote>\n<p>给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。</p>\n</blockquote>\n<h4 id=\"示例-6\"><a href=\"#示例-6\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [0,1,0,3,12]<br>输出: [1,3,12,0,0]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">moveZeroes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-删除排序数组中的重复项\"><a href=\"#1-删除排序数组中的重复项\" class=\"headerlink\" title=\"1. 删除排序数组中的重复项\"></a>1. 删除排序数组中的重复项</h3><blockquote>\n<p>给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p>\n</blockquote>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>给定 nums = [0,0,1,1,1,2,2,3,3,4],<br>函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。<br>你不需要考虑数组中超出新长度后面的元素。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeDuplicates</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-旋转数组\"><a href=\"#2-旋转数组\" class=\"headerlink\" title=\"2. 旋转数组\"></a>2. 旋转数组</h3><blockquote>\n<p>给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数</p>\n</blockquote>\n<h4 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: nums = [1,2,3,4,5,6,7], k = 3<br>输出: [5,6,7,1,2,3,4]<br>解释:<br>向右旋转 1 步: [7,1,2,3,4,5,6]<br>向右旋转 2 步: [6,7,1,2,3,4,5]<br>向右旋转 3 步: [5,6,7,1,2,3,4]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n Do not return anything, modify nums in-place instead.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nums<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-存在重复元素\"><a href=\"#3-存在重复元素\" class=\"headerlink\" title=\"3. 存在重复元素\"></a>3. 存在重复元素</h3><blockquote>\n<p>给定一个整数数组，判断是否存在重复元素。<br>如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。</p>\n</blockquote>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [1,2,3,1]<br>输出: true</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 实现1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">containsDuplicate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 实现二</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">containsDuplicate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">&#123;</span>\n  nums<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> nums<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> flag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-只出现一次的数字\"><a href=\"#4-只出现一次的数字\" class=\"headerlink\" title=\"4. 只出现一次的数字\"></a>4. 只出现一次的数字</h3><blockquote>\n<p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>\n</blockquote>\n<h4 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [4,1,2,1,2]<br>输出: 4</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> per <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>per <span class=\"token operator\">||</span> per <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el <span class=\"token operator\">==</span> per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> per<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    per <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-两个数组的交集-II\"><a href=\"#5-两个数组的交集-II\" class=\"headerlink\" title=\"5. 两个数组的交集 II\"></a>5. 两个数组的交集 II</h3><blockquote>\n<p>给定两个数组，编写一个函数来计算它们的交集。</p>\n</blockquote>\n<h4 id=\"示例-4\"><a href=\"#示例-4\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入：nums1 = [1,2,2,1], nums2 = [2,2]<br>输出：[2,2]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums1<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums2<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> nums2<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  nums1<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nums2<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      arr<span class=\"token punctuation\">[</span>m<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6-加一\"><a href=\"#6-加一\" class=\"headerlink\" title=\"6. 加一\"></a>6. 加一</h3><blockquote>\n<p>给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。<br>最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。<br>你可以假设除了整数 0 之外，这个整数不会以零开头。</p>\n</blockquote>\n<h4 id=\"示例-5\"><a href=\"#示例-5\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入：digits = [4,3,2,1]<br>输出：[4,3,2,2]<br>解释：输入数组表示数字 4321。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">plusOne</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">digits<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> digits<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  digits<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> digits<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-移动零\"><a href=\"#7-移动零\" class=\"headerlink\" title=\"7. 移动零\"></a>7. 移动零</h3><blockquote>\n<p>给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。</p>\n</blockquote>\n<h4 id=\"示例-6\"><a href=\"#示例-6\" class=\"headerlink\" title=\"示例\"></a>示例</h4><blockquote>\n<p>输入: [0,1,0,3,12]<br>输出: [1,3,12,0,0]</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">moveZeroes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      nums<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckhfkj3qy00037rf152vq0y9u","tag_id":"ckhfkj3r000067rf1dc3e0aih","_id":"ckhfkj3r5000e7rf15mwacgej"},{"post_id":"ckhfkj3qz00057rf1hp142xvg","tag_id":"ckhfkj3r5000d7rf1eev64rca","_id":"ckhfkj3r7000h7rf17fht489b"},{"post_id":"ckhfkj3r4000c7rf1g6499rau","tag_id":"ckhfkj3r6000g7rf10o7ugcc8","_id":"ckhfkj3r7000i7rf1dslac9jb"},{"post_id":"ckhgyvlvw0000g2f15pfi9ue0","tag_id":"ckhfkj3r6000g7rf10o7ugcc8","_id":"ckhgyvlw00001g2f1cq52g9sw"},{"post_id":"cklkawjcp0000o3f1729z206r","tag_id":"cklkawjct0001o3f1c3c2echm","_id":"cklkawjcv0002o3f12uvjd41i"}],"Tag":[{"name":"markdown","_id":"ckhfkj3r000067rf1dc3e0aih"},{"name":"nodejs","_id":"ckhfkj3r5000d7rf1eev64rca"},{"name":"javascript","_id":"ckhfkj3r6000g7rf10o7ugcc8"},{"name":"算法","_id":"cklkawjct0001o3f1c3c2echm"}]}}